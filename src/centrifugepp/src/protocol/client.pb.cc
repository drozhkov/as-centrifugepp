// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protocol/client.proto
// Protobuf C++ Version: 5.29.3

#include "protocol/client.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace centrifugal {
namespace centrifuge {
namespace protocol {
              template <typename>
PROTOBUF_CONSTEXPR UnsubscribeResult::UnsubscribeResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UnsubscribeResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeResultDefaultTypeInternal() {}
  union {
    UnsubscribeResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeResultDefaultTypeInternal _UnsubscribeResult_default_instance_;

inline constexpr UnsubscribeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnsubscribeRequest::UnsubscribeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnsubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeRequestDefaultTypeInternal() {}
  union {
    UnsubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeRequestDefaultTypeInternal _UnsubscribeRequest_default_instance_;

inline constexpr Unsubscribe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Unsubscribe::Unsubscribe(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnsubscribeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeDefaultTypeInternal() {}
  union {
    Unsubscribe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeDefaultTypeInternal _Unsubscribe_default_instance_;

inline constexpr SubscribeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delta_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::uint64_t{0u}},
        recover_{false},
        positioned_{false},
        recoverable_{false},
        join_leave_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest::SubscribeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestDefaultTypeInternal() {}
  union {
    SubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;

inline constexpr Subscribe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : epoch_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::uint64_t{0u}},
        recoverable_{false},
        positioned_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Subscribe::Subscribe(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeDefaultTypeInternal() {}
  union {
    Subscribe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeDefaultTypeInternal _Subscribe_default_instance_;

inline constexpr SubRefreshResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : expires_{false},
        ttl_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubRefreshResult::SubRefreshResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubRefreshResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubRefreshResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubRefreshResultDefaultTypeInternal() {}
  union {
    SubRefreshResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubRefreshResultDefaultTypeInternal _SubRefreshResult_default_instance_;

inline constexpr SubRefreshRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubRefreshRequest::SubRefreshRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubRefreshRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubRefreshRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubRefreshRequestDefaultTypeInternal() {}
  union {
    SubRefreshRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubRefreshRequestDefaultTypeInternal _SubRefreshRequest_default_instance_;

inline constexpr StreamPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : epoch_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamPosition::StreamPosition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamPositionDefaultTypeInternal() {}
  union {
    StreamPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamPositionDefaultTypeInternal _StreamPosition_default_instance_;

inline constexpr SendRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendRequest::SendRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendRequestDefaultTypeInternal() {}
  union {
    SendRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendRequestDefaultTypeInternal _SendRequest_default_instance_;

inline constexpr RefreshResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_{false},
        ttl_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RefreshResult::RefreshResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RefreshResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshResultDefaultTypeInternal() {}
  union {
    RefreshResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshResultDefaultTypeInternal _RefreshResult_default_instance_;

inline constexpr RefreshRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RefreshRequest::RefreshRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RefreshRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshRequestDefaultTypeInternal() {}
  union {
    RefreshRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshRequestDefaultTypeInternal _RefreshRequest_default_instance_;

inline constexpr Refresh::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : expires_{false},
        ttl_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Refresh::Refresh(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RefreshDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshDefaultTypeInternal() {}
  union {
    Refresh _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshDefaultTypeInternal _Refresh_default_instance_;

inline constexpr RPCResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RPCResult::RPCResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RPCResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RPCResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RPCResultDefaultTypeInternal() {}
  union {
    RPCResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RPCResultDefaultTypeInternal _RPCResult_default_instance_;

inline constexpr RPCRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RPCRequest::RPCRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RPCRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RPCRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RPCRequestDefaultTypeInternal() {}
  union {
    RPCRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RPCRequestDefaultTypeInternal _RPCRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PublishResult::PublishResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PublishResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishResultDefaultTypeInternal() {}
  union {
    PublishResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishResultDefaultTypeInternal _PublishResult_default_instance_;

inline constexpr PublishRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PublishRequest::PublishRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PublishRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishRequestDefaultTypeInternal() {}
  union {
    PublishRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishRequestDefaultTypeInternal _PublishRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Publication_TagsEntry_DoNotUse::Publication_TagsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Publication_TagsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Publication_TagsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Publication_TagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Publication_TagsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Publication_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Publication_TagsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Publication_TagsEntry_DoNotUseDefaultTypeInternal _Publication_TagsEntry_DoNotUse_default_instance_;

inline constexpr PresenceStatsResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : num_clients_{0u},
        num_users_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PresenceStatsResult::PresenceStatsResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PresenceStatsResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PresenceStatsResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PresenceStatsResultDefaultTypeInternal() {}
  union {
    PresenceStatsResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PresenceStatsResultDefaultTypeInternal _PresenceStatsResult_default_instance_;

inline constexpr PresenceStatsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PresenceStatsRequest::PresenceStatsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PresenceStatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PresenceStatsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PresenceStatsRequestDefaultTypeInternal() {}
  union {
    PresenceStatsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PresenceStatsRequestDefaultTypeInternal _PresenceStatsRequest_default_instance_;

inline constexpr PresenceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PresenceRequest::PresenceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PresenceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PresenceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PresenceRequestDefaultTypeInternal() {}
  union {
    PresenceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PresenceRequestDefaultTypeInternal _PresenceRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PingResult::PingResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PingResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingResultDefaultTypeInternal() {}
  union {
    PingResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingResultDefaultTypeInternal _PingResult_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PingRequest::PingRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingRequestDefaultTypeInternal() {}
  union {
    PingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingRequestDefaultTypeInternal _PingRequest_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;

inline constexpr Error::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_{0u},
        temporary_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Error::Error(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorDefaultTypeInternal() {}
  union {
    Error _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorDefaultTypeInternal _Error_default_instance_;

inline constexpr EmulationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmulationRequest::EmulationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EmulationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmulationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmulationRequestDefaultTypeInternal() {}
  union {
    EmulationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmulationRequestDefaultTypeInternal _EmulationRequest_default_instance_;

inline constexpr Disconnect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_{0u},
        reconnect_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Disconnect::Disconnect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisconnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisconnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisconnectDefaultTypeInternal() {}
  union {
    Disconnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectDefaultTypeInternal _Disconnect_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ConnectRequest_HeadersEntry_DoNotUse::ConnectRequest_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConnectRequest_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConnectRequest_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConnectRequest_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectRequest_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectRequest_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConnectRequest_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectRequest_HeadersEntry_DoNotUseDefaultTypeInternal _ConnectRequest_HeadersEntry_DoNotUse_default_instance_;

inline constexpr ClientInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conn_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chan_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientInfo::ClientInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientInfoDefaultTypeInternal() {}
  union {
    ClientInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientInfoDefaultTypeInternal _ClientInfo_default_instance_;

inline constexpr Publication::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_{nullptr},
        offset_{::uint64_t{0u}},
        time_{::int64_t{0}},
        delta_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Publication::Publication(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PublicationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublicationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublicationDefaultTypeInternal() {}
  union {
    Publication _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublicationDefaultTypeInternal _Publication_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PresenceResult_PresenceEntry_DoNotUse::PresenceResult_PresenceEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PresenceResult_PresenceEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PresenceResult_PresenceEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PresenceResult_PresenceEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PresenceResult_PresenceEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PresenceResult_PresenceEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PresenceResult_PresenceEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PresenceResult_PresenceEntry_DoNotUseDefaultTypeInternal _PresenceResult_PresenceEntry_DoNotUse_default_instance_;

inline constexpr Leave::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Leave::Leave(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveDefaultTypeInternal() {}
  union {
    Leave _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveDefaultTypeInternal _Leave_default_instance_;

inline constexpr Join::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Join::Join(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinDefaultTypeInternal() {}
  union {
    Join _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinDefaultTypeInternal _Join_default_instance_;

inline constexpr HistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        since_{nullptr},
        limit_{0},
        reverse_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryRequest::HistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryRequestDefaultTypeInternal() {}
  union {
    HistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryRequestDefaultTypeInternal _HistoryRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ConnectRequest_SubsEntry_DoNotUse::ConnectRequest_SubsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConnectRequest_SubsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConnectRequest_SubsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConnectRequest_SubsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectRequest_SubsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectRequest_SubsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConnectRequest_SubsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectRequest_SubsEntry_DoNotUseDefaultTypeInternal _ConnectRequest_SubsEntry_DoNotUse_default_instance_;

inline constexpr SubscribeResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : publications_{},
        epoch_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ttl_{0u},
        expires_{false},
        recoverable_{false},
        recovered_{false},
        positioned_{false},
        offset_{::uint64_t{0u}},
        was_recovering_{false},
        delta_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeResult::SubscribeResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeResultDefaultTypeInternal() {}
  union {
    SubscribeResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeResultDefaultTypeInternal _SubscribeResult_default_instance_;

inline constexpr PresenceResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : presence_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PresenceResult::PresenceResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PresenceResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PresenceResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PresenceResultDefaultTypeInternal() {}
  union {
    PresenceResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PresenceResultDefaultTypeInternal _PresenceResult_default_instance_;

inline constexpr HistoryResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : publications_{},
        epoch_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryResult::HistoryResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoryResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryResultDefaultTypeInternal() {}
  union {
    HistoryResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryResultDefaultTypeInternal _HistoryResult_default_instance_;

inline constexpr ConnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subs_{},
        headers_{},
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectRequest::ConnectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectRequestDefaultTypeInternal() {}
  union {
    ConnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectRequestDefaultTypeInternal _ConnectRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ConnectResult_SubsEntry_DoNotUse::ConnectResult_SubsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConnectResult_SubsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConnectResult_SubsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConnectResult_SubsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectResult_SubsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectResult_SubsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConnectResult_SubsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectResult_SubsEntry_DoNotUseDefaultTypeInternal _ConnectResult_SubsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Connect_SubsEntry_DoNotUse::Connect_SubsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Connect_SubsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Connect_SubsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Connect_SubsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Connect_SubsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Connect_SubsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Connect_SubsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Connect_SubsEntry_DoNotUseDefaultTypeInternal _Connect_SubsEntry_DoNotUse_default_instance_;

inline constexpr Command::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connect_{nullptr},
        subscribe_{nullptr},
        unsubscribe_{nullptr},
        publish_{nullptr},
        presence_{nullptr},
        presence_stats_{nullptr},
        history_{nullptr},
        ping_{nullptr},
        send_{nullptr},
        rpc_{nullptr},
        refresh_{nullptr},
        sub_refresh_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Command::Command(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandDefaultTypeInternal() {}
  union {
    Command _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandDefaultTypeInternal _Command_default_instance_;

inline constexpr ConnectResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subs_{},
        client_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ttl_{0u},
        expires_{false},
        pong_{false},
        time_{::int64_t{0}},
        ping_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectResult::ConnectResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectResultDefaultTypeInternal() {}
  union {
    ConnectResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectResultDefaultTypeInternal _ConnectResult_default_instance_;

inline constexpr Connect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subs_{},
        client_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ttl_{0u},
        expires_{false},
        pong_{false},
        time_{::int64_t{0}},
        ping_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Connect::Connect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectDefaultTypeInternal() {}
  union {
    Connect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectDefaultTypeInternal _Connect_default_instance_;

inline constexpr Push::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_{nullptr},
        join_{nullptr},
        leave_{nullptr},
        unsubscribe_{nullptr},
        message_{nullptr},
        subscribe_{nullptr},
        connect_{nullptr},
        disconnect_{nullptr},
        refresh_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Push::Push(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PushDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushDefaultTypeInternal() {}
  union {
    Push _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushDefaultTypeInternal _Push_default_instance_;

inline constexpr Reply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_{nullptr},
        push_{nullptr},
        connect_{nullptr},
        subscribe_{nullptr},
        unsubscribe_{nullptr},
        publish_{nullptr},
        presence_{nullptr},
        presence_stats_{nullptr},
        history_{nullptr},
        ping_{nullptr},
        rpc_{nullptr},
        refresh_{nullptr},
        sub_refresh_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Reply::Reply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyDefaultTypeInternal() {}
  union {
    Reply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyDefaultTypeInternal _Reply_default_instance_;
}  // namespace protocol
}  // namespace centrifuge
}  // namespace centrifugal
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protocol_2fclient_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protocol_2fclient_2eproto = nullptr;
const ::uint32_t
    TableStruct_protocol_2fclient_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Error, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Error, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Error, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Error, _impl_.temporary_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::EmulationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::EmulationRequest, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::EmulationRequest, _impl_.session_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::EmulationRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.connect_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.subscribe_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.unsubscribe_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.publish_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.presence_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.presence_stats_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.history_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.send_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.rpc_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.refresh_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Command, _impl_.sub_refresh_),
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.push_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.connect_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.subscribe_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.unsubscribe_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.publish_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.presence_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.presence_stats_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.history_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.rpc_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.refresh_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Reply, _impl_.sub_refresh_),
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.pub_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.join_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.leave_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.unsubscribe_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.subscribe_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.connect_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.disconnect_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Push, _impl_.refresh_),
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ClientInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ClientInfo, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ClientInfo, _impl_.client_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ClientInfo, _impl_.conn_info_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ClientInfo, _impl_.chan_info_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication_TagsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication_TagsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication_TagsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication_TagsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.delta_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Publication, _impl_.channel_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Join, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Join, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Join, _impl_.info_),
        0,
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Leave, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Leave, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Leave, _impl_.info_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Unsubscribe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Unsubscribe, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Unsubscribe, _impl_.reason_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Subscribe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Subscribe, _impl_.recoverable_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Subscribe, _impl_.epoch_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Subscribe, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Subscribe, _impl_.positioned_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Subscribe, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Message, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect_SubsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect_SubsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect_SubsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect_SubsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.client_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.subs_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.pong_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.session_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Connect, _impl_.time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Disconnect, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Disconnect, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Disconnect, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Disconnect, _impl_.reconnect_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Refresh, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Refresh, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::Refresh, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_SubsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_SubsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_SubsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_SubsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _impl_.subs_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectRequest, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult_SubsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult_SubsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult_SubsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult_SubsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.client_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.subs_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.pong_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.session_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::ConnectResult, _impl_.time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshRequest, _impl_.token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshResult, _impl_.client_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshResult, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshResult, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RefreshResult, _impl_.ttl_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.recover_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.epoch_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.positioned_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.recoverable_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.join_leave_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeRequest, _impl_.delta_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.recoverable_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.epoch_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.publications_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.recovered_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.positioned_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.was_recovering_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubscribeResult, _impl_.delta_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubRefreshRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubRefreshRequest, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubRefreshRequest, _impl_.token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubRefreshResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubRefreshResult, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SubRefreshResult, _impl_.ttl_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::UnsubscribeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::UnsubscribeRequest, _impl_.channel_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::UnsubscribeResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PublishRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PublishRequest, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PublishRequest, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PublishResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceRequest, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceResult_PresenceEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceResult_PresenceEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceResult_PresenceEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceResult_PresenceEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceResult, _impl_.presence_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceStatsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceStatsRequest, _impl_.channel_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceStatsResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceStatsResult, _impl_.num_clients_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PresenceStatsResult, _impl_.num_users_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::StreamPosition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::StreamPosition, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::StreamPosition, _impl_.epoch_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryRequest, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryRequest, _impl_.since_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryRequest, _impl_.reverse_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryResult, _impl_.publications_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryResult, _impl_.epoch_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::HistoryResult, _impl_.offset_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::PingResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RPCRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RPCRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RPCRequest, _impl_.method_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RPCResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::RPCResult, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centrifugal::centrifuge::protocol::SendRequest, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Error)},
        {11, -1, -1, sizeof(::centrifugal::centrifuge::protocol::EmulationRequest)},
        {22, 43, -1, sizeof(::centrifugal::centrifuge::protocol::Command)},
        {56, 78, -1, sizeof(::centrifugal::centrifuge::protocol::Reply)},
        {92, 110, -1, sizeof(::centrifugal::centrifuge::protocol::Push)},
        {120, -1, -1, sizeof(::centrifugal::centrifuge::protocol::ClientInfo)},
        {132, 142, -1, sizeof(::centrifugal::centrifuge::protocol::Publication_TagsEntry_DoNotUse)},
        {144, 159, -1, sizeof(::centrifugal::centrifuge::protocol::Publication)},
        {166, 175, -1, sizeof(::centrifugal::centrifuge::protocol::Join)},
        {176, 185, -1, sizeof(::centrifugal::centrifuge::protocol::Leave)},
        {186, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Unsubscribe)},
        {196, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Subscribe)},
        {209, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Message)},
        {218, 228, -1, sizeof(::centrifugal::centrifuge::protocol::Connect_SubsEntry_DoNotUse)},
        {230, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Connect)},
        {249, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Disconnect)},
        {260, -1, -1, sizeof(::centrifugal::centrifuge::protocol::Refresh)},
        {270, 280, -1, sizeof(::centrifugal::centrifuge::protocol::ConnectRequest_SubsEntry_DoNotUse)},
        {282, 292, -1, sizeof(::centrifugal::centrifuge::protocol::ConnectRequest_HeadersEntry_DoNotUse)},
        {294, -1, -1, sizeof(::centrifugal::centrifuge::protocol::ConnectRequest)},
        {308, 318, -1, sizeof(::centrifugal::centrifuge::protocol::ConnectResult_SubsEntry_DoNotUse)},
        {320, -1, -1, sizeof(::centrifugal::centrifuge::protocol::ConnectResult)},
        {339, -1, -1, sizeof(::centrifugal::centrifuge::protocol::RefreshRequest)},
        {348, -1, -1, sizeof(::centrifugal::centrifuge::protocol::RefreshResult)},
        {360, -1, -1, sizeof(::centrifugal::centrifuge::protocol::SubscribeRequest)},
        {378, -1, -1, sizeof(::centrifugal::centrifuge::protocol::SubscribeResult)},
        {397, -1, -1, sizeof(::centrifugal::centrifuge::protocol::SubRefreshRequest)},
        {407, -1, -1, sizeof(::centrifugal::centrifuge::protocol::SubRefreshResult)},
        {417, -1, -1, sizeof(::centrifugal::centrifuge::protocol::UnsubscribeRequest)},
        {426, -1, -1, sizeof(::centrifugal::centrifuge::protocol::UnsubscribeResult)},
        {434, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PublishRequest)},
        {444, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PublishResult)},
        {452, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PresenceRequest)},
        {461, 471, -1, sizeof(::centrifugal::centrifuge::protocol::PresenceResult_PresenceEntry_DoNotUse)},
        {473, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PresenceResult)},
        {482, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PresenceStatsRequest)},
        {491, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PresenceStatsResult)},
        {501, -1, -1, sizeof(::centrifugal::centrifuge::protocol::StreamPosition)},
        {511, 523, -1, sizeof(::centrifugal::centrifuge::protocol::HistoryRequest)},
        {527, -1, -1, sizeof(::centrifugal::centrifuge::protocol::HistoryResult)},
        {538, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PingRequest)},
        {546, -1, -1, sizeof(::centrifugal::centrifuge::protocol::PingResult)},
        {554, -1, -1, sizeof(::centrifugal::centrifuge::protocol::RPCRequest)},
        {564, -1, -1, sizeof(::centrifugal::centrifuge::protocol::RPCResult)},
        {573, -1, -1, sizeof(::centrifugal::centrifuge::protocol::SendRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::centrifugal::centrifuge::protocol::_Error_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_EmulationRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Command_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Reply_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Push_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_ClientInfo_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Publication_TagsEntry_DoNotUse_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Publication_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Join_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Leave_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Unsubscribe_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Subscribe_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Message_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Connect_SubsEntry_DoNotUse_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Connect_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Disconnect_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_Refresh_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_ConnectRequest_SubsEntry_DoNotUse_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_ConnectRequest_HeadersEntry_DoNotUse_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_ConnectRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_ConnectResult_SubsEntry_DoNotUse_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_ConnectResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_RefreshRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_RefreshResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_SubscribeRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_SubscribeResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_SubRefreshRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_SubRefreshResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_UnsubscribeRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_UnsubscribeResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PublishRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PublishResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PresenceRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PresenceResult_PresenceEntry_DoNotUse_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PresenceResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PresenceStatsRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PresenceStatsResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_StreamPosition_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_HistoryRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_HistoryResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PingRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_PingResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_RPCRequest_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_RPCResult_default_instance_._instance,
    &::centrifugal::centrifuge::protocol::_SendRequest_default_instance_._instance,
};
const char descriptor_table_protodef_protocol_2fclient_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025protocol/client.proto\022\037centrifugal.cen"
    "trifuge.protocol\"9\n\005Error\022\014\n\004code\030\001 \001(\r\022"
    "\017\n\007message\030\002 \001(\t\022\021\n\ttemporary\030\003 \001(\010\"\?\n\020E"
    "mulationRequest\022\014\n\004node\030\001 \001(\t\022\017\n\007session"
    "\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\"\307\006\n\007Command\022\n\n\002id\030\001"
    " \001(\r\022@\n\007connect\030\004 \001(\0132/.centrifugal.cent"
    "rifuge.protocol.ConnectRequest\022D\n\tsubscr"
    "ibe\030\005 \001(\01321.centrifugal.centrifuge.proto"
    "col.SubscribeRequest\022H\n\013unsubscribe\030\006 \001("
    "\01323.centrifugal.centrifuge.protocol.Unsu"
    "bscribeRequest\022@\n\007publish\030\007 \001(\0132/.centri"
    "fugal.centrifuge.protocol.PublishRequest"
    "\022B\n\010presence\030\010 \001(\01320.centrifugal.centrif"
    "uge.protocol.PresenceRequest\022M\n\016presence"
    "_stats\030\t \001(\01325.centrifugal.centrifuge.pr"
    "otocol.PresenceStatsRequest\022@\n\007history\030\n"
    " \001(\0132/.centrifugal.centrifuge.protocol.H"
    "istoryRequest\022:\n\004ping\030\013 \001(\0132,.centrifuga"
    "l.centrifuge.protocol.PingRequest\022:\n\004sen"
    "d\030\014 \001(\0132,.centrifugal.centrifuge.protoco"
    "l.SendRequest\0228\n\003rpc\030\r \001(\0132+.centrifugal"
    ".centrifuge.protocol.RPCRequest\022@\n\007refre"
    "sh\030\016 \001(\0132/.centrifugal.centrifuge.protoc"
    "ol.RefreshRequest\022G\n\013sub_refresh\030\017 \001(\01322"
    ".centrifugal.centrifuge.protocol.SubRefr"
    "eshRequestJ\004\010\002\020\003J\004\010\003\020\004\"\344\006\n\005Reply\022\n\n\002id\030\001"
    " \001(\r\0225\n\005error\030\002 \001(\0132&.centrifugal.centri"
    "fuge.protocol.Error\0223\n\004push\030\004 \001(\0132%.cent"
    "rifugal.centrifuge.protocol.Push\022\?\n\007conn"
    "ect\030\005 \001(\0132..centrifugal.centrifuge.proto"
    "col.ConnectResult\022C\n\tsubscribe\030\006 \001(\01320.c"
    "entrifugal.centrifuge.protocol.Subscribe"
    "Result\022G\n\013unsubscribe\030\007 \001(\01322.centrifuga"
    "l.centrifuge.protocol.UnsubscribeResult\022"
    "\?\n\007publish\030\010 \001(\0132..centrifugal.centrifug"
    "e.protocol.PublishResult\022A\n\010presence\030\t \001"
    "(\0132/.centrifugal.centrifuge.protocol.Pre"
    "senceResult\022L\n\016presence_stats\030\n \001(\01324.ce"
    "ntrifugal.centrifuge.protocol.PresenceSt"
    "atsResult\022\?\n\007history\030\013 \001(\0132..centrifugal"
    ".centrifuge.protocol.HistoryResult\0229\n\004pi"
    "ng\030\014 \001(\0132+.centrifugal.centrifuge.protoc"
    "ol.PingResult\0227\n\003rpc\030\r \001(\0132*.centrifugal"
    ".centrifuge.protocol.RPCResult\022\?\n\007refres"
    "h\030\016 \001(\0132..centrifugal.centrifuge.protoco"
    "l.RefreshResult\022F\n\013sub_refresh\030\017 \001(\01321.c"
    "entrifugal.centrifuge.protocol.SubRefres"
    "hResultJ\004\010\003\020\004\"\276\004\n\004Push\022\017\n\007channel\030\002 \001(\t\022"
    "9\n\003pub\030\004 \001(\0132,.centrifugal.centrifuge.pr"
    "otocol.Publication\0223\n\004join\030\005 \001(\0132%.centr"
    "ifugal.centrifuge.protocol.Join\0225\n\005leave"
    "\030\006 \001(\0132&.centrifugal.centrifuge.protocol"
    ".Leave\022A\n\013unsubscribe\030\007 \001(\0132,.centrifuga"
    "l.centrifuge.protocol.Unsubscribe\0229\n\007mes"
    "sage\030\010 \001(\0132(.centrifugal.centrifuge.prot"
    "ocol.Message\022=\n\tsubscribe\030\t \001(\0132*.centri"
    "fugal.centrifuge.protocol.Subscribe\0229\n\007c"
    "onnect\030\n \001(\0132(.centrifugal.centrifuge.pr"
    "otocol.Connect\022\?\n\ndisconnect\030\013 \001(\0132+.cen"
    "trifugal.centrifuge.protocol.Disconnect\022"
    "9\n\007refresh\030\014 \001(\0132(.centrifugal.centrifug"
    "e.protocol.RefreshJ\004\010\001\020\002J\004\010\003\020\004\"P\n\nClient"
    "Info\022\014\n\004user\030\001 \001(\t\022\016\n\006client\030\002 \001(\t\022\021\n\tco"
    "nn_info\030\003 \001(\014\022\021\n\tchan_info\030\004 \001(\014\"\231\002\n\013Pub"
    "lication\022\014\n\004data\030\004 \001(\014\0229\n\004info\030\005 \001(\0132+.c"
    "entrifugal.centrifuge.protocol.ClientInf"
    "o\022\016\n\006offset\030\006 \001(\004\022D\n\004tags\030\007 \003(\01326.centri"
    "fugal.centrifuge.protocol.Publication.Ta"
    "gsEntry\022\r\n\005delta\030\010 \001(\010\022\014\n\004time\030\t \001(\003\022\017\n\007"
    "channel\030\n \001(\t\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022"
    "\r\n\005value\030\002 \001(\t:\0028\001J\004\010\001\020\002J\004\010\002\020\003J\004\010\003\020\004\"A\n\004"
    "Join\0229\n\004info\030\001 \001(\0132+.centrifugal.centrif"
    "uge.protocol.ClientInfo\"B\n\005Leave\0229\n\004info"
    "\030\001 \001(\0132+.centrifugal.centrifuge.protocol"
    ".ClientInfo\"1\n\013Unsubscribe\022\014\n\004code\030\002 \001(\r"
    "\022\016\n\006reason\030\003 \001(\tJ\004\010\001\020\002\"m\n\tSubscribe\022\023\n\013r"
    "ecoverable\030\001 \001(\010\022\r\n\005epoch\030\004 \001(\t\022\016\n\006offse"
    "t\030\005 \001(\004\022\022\n\npositioned\030\006 \001(\010\022\014\n\004data\030\007 \001("
    "\014J\004\010\002\020\003J\004\010\003\020\004\"\027\n\007Message\022\014\n\004data\030\001 \001(\014\"\300"
    "\002\n\007Connect\022\016\n\006client\030\001 \001(\t\022\017\n\007version\030\002 "
    "\001(\t\022\014\n\004data\030\003 \001(\014\022@\n\004subs\030\004 \003(\01322.centri"
    "fugal.centrifuge.protocol.Connect.SubsEn"
    "try\022\017\n\007expires\030\005 \001(\010\022\013\n\003ttl\030\006 \001(\r\022\014\n\004pin"
    "g\030\007 \001(\r\022\014\n\004pong\030\010 \001(\010\022\017\n\007session\030\t \001(\t\022\014"
    "\n\004node\030\n \001(\t\022\014\n\004time\030\013 \001(\003\032]\n\tSubsEntry\022"
    "\013\n\003key\030\001 \001(\t\022\?\n\005value\030\002 \001(\01320.centrifuga"
    "l.centrifuge.protocol.SubscribeResult:\0028"
    "\001\"=\n\nDisconnect\022\014\n\004code\030\001 \001(\r\022\016\n\006reason\030"
    "\002 \001(\t\022\021\n\treconnect\030\003 \001(\010\"\'\n\007Refresh\022\017\n\007e"
    "xpires\030\001 \001(\010\022\013\n\003ttl\030\002 \001(\r\"\364\002\n\016ConnectReq"
    "uest\022\r\n\005token\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\022G\n\004sub"
    "s\030\003 \003(\01329.centrifugal.centrifuge.protoco"
    "l.ConnectRequest.SubsEntry\022\014\n\004name\030\004 \001(\t"
    "\022\017\n\007version\030\005 \001(\t\022M\n\007headers\030\006 \003(\0132<.cen"
    "trifugal.centrifuge.protocol.ConnectRequ"
    "est.HeadersEntry\032^\n\tSubsEntry\022\013\n\003key\030\001 \001"
    "(\t\022@\n\005value\030\002 \001(\01321.centrifugal.centrifu"
    "ge.protocol.SubscribeRequest:\0028\001\032.\n\014Head"
    "ersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
    "\"\314\002\n\rConnectResult\022\016\n\006client\030\001 \001(\t\022\017\n\007ve"
    "rsion\030\002 \001(\t\022\017\n\007expires\030\003 \001(\010\022\013\n\003ttl\030\004 \001("
    "\r\022\014\n\004data\030\005 \001(\014\022F\n\004subs\030\006 \003(\01328.centrifu"
    "gal.centrifuge.protocol.ConnectResult.Su"
    "bsEntry\022\014\n\004ping\030\007 \001(\r\022\014\n\004pong\030\010 \001(\010\022\017\n\007s"
    "ession\030\t \001(\t\022\014\n\004node\030\n \001(\t\022\014\n\004time\030\013 \001(\003"
    "\032]\n\tSubsEntry\022\013\n\003key\030\001 \001(\t\022\?\n\005value\030\002 \001("
    "\01320.centrifugal.centrifuge.protocol.Subs"
    "cribeResult:\0028\001\"\037\n\016RefreshRequest\022\r\n\005tok"
    "en\030\001 \001(\t\"N\n\rRefreshResult\022\016\n\006client\030\001 \001("
    "\t\022\017\n\007version\030\002 \001(\t\022\017\n\007expires\030\003 \001(\010\022\013\n\003t"
    "tl\030\004 \001(\r\"\310\001\n\020SubscribeRequest\022\017\n\007channel"
    "\030\001 \001(\t\022\r\n\005token\030\002 \001(\t\022\017\n\007recover\030\003 \001(\010\022\r"
    "\n\005epoch\030\006 \001(\t\022\016\n\006offset\030\007 \001(\004\022\014\n\004data\030\010 "
    "\001(\014\022\022\n\npositioned\030\t \001(\010\022\023\n\013recoverable\030\n"
    " \001(\010\022\022\n\njoin_leave\030\013 \001(\010\022\r\n\005delta\030\014 \001(\tJ"
    "\004\010\004\020\005J\004\010\005\020\006\"\217\002\n\017SubscribeResult\022\017\n\007expir"
    "es\030\001 \001(\010\022\013\n\003ttl\030\002 \001(\r\022\023\n\013recoverable\030\003 \001"
    "(\010\022\r\n\005epoch\030\006 \001(\t\022B\n\014publications\030\007 \003(\0132"
    ",.centrifugal.centrifuge.protocol.Public"
    "ation\022\021\n\trecovered\030\010 \001(\010\022\016\n\006offset\030\t \001(\004"
    "\022\022\n\npositioned\030\n \001(\010\022\014\n\004data\030\013 \001(\014\022\026\n\016wa"
    "s_recovering\030\014 \001(\010\022\r\n\005delta\030\r \001(\010J\004\010\004\020\005J"
    "\004\010\005\020\006\"3\n\021SubRefreshRequest\022\017\n\007channel\030\001 "
    "\001(\t\022\r\n\005token\030\002 \001(\t\"0\n\020SubRefreshResult\022\017"
    "\n\007expires\030\001 \001(\010\022\013\n\003ttl\030\002 \001(\r\"%\n\022Unsubscr"
    "ibeRequest\022\017\n\007channel\030\001 \001(\t\"\023\n\021Unsubscri"
    "beResult\"/\n\016PublishRequest\022\017\n\007channel\030\001 "
    "\001(\t\022\014\n\004data\030\002 \001(\014\"\017\n\rPublishResult\"\"\n\017Pr"
    "esenceRequest\022\017\n\007channel\030\001 \001(\t\"\277\001\n\016Prese"
    "nceResult\022O\n\010presence\030\001 \003(\0132=.centrifuga"
    "l.centrifuge.protocol.PresenceResult.Pre"
    "senceEntry\032\\\n\rPresenceEntry\022\013\n\003key\030\001 \001(\t"
    "\022:\n\005value\030\002 \001(\0132+.centrifugal.centrifuge"
    ".protocol.ClientInfo:\0028\001\"\'\n\024PresenceStat"
    "sRequest\022\017\n\007channel\030\001 \001(\t\"=\n\023PresenceSta"
    "tsResult\022\023\n\013num_clients\030\001 \001(\r\022\021\n\tnum_use"
    "rs\030\002 \001(\r\"/\n\016StreamPosition\022\016\n\006offset\030\001 \001"
    "(\004\022\r\n\005epoch\030\002 \001(\t\"\237\001\n\016HistoryRequest\022\017\n\007"
    "channel\030\001 \001(\t\022\r\n\005limit\030\007 \001(\005\022>\n\005since\030\010 "
    "\001(\0132/.centrifugal.centrifuge.protocol.St"
    "reamPosition\022\017\n\007reverse\030\t \001(\010J\004\010\002\020\003J\004\010\003\020"
    "\004J\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007\"r\n\rHistoryResult\022B\n\014"
    "publications\030\001 \003(\0132,.centrifugal.centrif"
    "uge.protocol.Publication\022\r\n\005epoch\030\002 \001(\t\022"
    "\016\n\006offset\030\003 \001(\004\"\r\n\013PingRequest\"\014\n\nPingRe"
    "sult\"*\n\nRPCRequest\022\014\n\004data\030\001 \001(\014\022\016\n\006meth"
    "od\030\002 \001(\t\"\031\n\tRPCResult\022\014\n\004data\030\001 \001(\014\"\033\n\013S"
    "endRequest\022\014\n\004data\030\001 \001(\014B!Z\037github.com/c"
    "entrifugal/protocolb\006proto3"
};
static ::absl::once_flag descriptor_table_protocol_2fclient_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protocol_2fclient_2eproto = {
    false,
    false,
    5947,
    descriptor_table_protodef_protocol_2fclient_2eproto,
    "protocol/client.proto",
    &descriptor_table_protocol_2fclient_2eproto_once,
    nullptr,
    0,
    45,
    schemas,
    file_default_instances,
    TableStruct_protocol_2fclient_2eproto::offsets,
    file_level_enum_descriptors_protocol_2fclient_2eproto,
    file_level_service_descriptors_protocol_2fclient_2eproto,
};
namespace centrifugal {
namespace centrifuge {
namespace protocol {
// ===================================================================

class Error::_Internal {
 public:
};

Error::Error(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Error)
}
inline PROTOBUF_NDEBUG_INLINE Error::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Error& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Error::Error(
    ::google::protobuf::Arena* arena,
    const Error& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Error* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, code_),
           offsetof(Impl_, temporary_) -
               offsetof(Impl_, code_) +
               sizeof(Impl_::temporary_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Error)
}
inline PROTOBUF_NDEBUG_INLINE Error::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Error::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_),
           0,
           offsetof(Impl_, temporary_) -
               offsetof(Impl_, code_) +
               sizeof(Impl_::temporary_));
}
Error::~Error() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Error)
  SharedDtor(*this);
}
inline void Error::SharedDtor(MessageLite& self) {
  Error& this_ = static_cast<Error&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Error::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Error(arena);
}
constexpr auto Error::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Error),
                                            alignof(Error));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Error::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Error_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Error::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Error>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Error::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Error>(), &Error::ByteSizeLong,
            &Error::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Error, _impl_._cached_size_),
        false,
    },
    &Error::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Error::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 53, 2> Error::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Error>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Error, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Error, _impl_.code_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Error, _impl_.message_)}},
    // bool temporary = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Error, _impl_.temporary_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Error, _impl_.temporary_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 code = 1;
    {PROTOBUF_FIELD_OFFSET(Error, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Error, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool temporary = 3;
    {PROTOBUF_FIELD_OFFSET(Error, _impl_.temporary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\45\0\7\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Error"
    "message"
  }},
};

PROTOBUF_NOINLINE void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Error)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.code_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.temporary_) -
      reinterpret_cast<char*>(&_impl_.code_)) + sizeof(_impl_.temporary_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Error::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Error& this_ = static_cast<const Error&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Error::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Error& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Error)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 code = 1;
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_code(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Error.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool temporary = 3;
          if (this_._internal_temporary() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_temporary(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Error)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Error::ByteSizeLong(const MessageLite& base) {
          const Error& this_ = static_cast<const Error&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Error::ByteSizeLong() const {
          const Error& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Error)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // uint32 code = 1;
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
            // bool temporary = 3;
            if (this_._internal_temporary() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Error::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Error*>(&to_msg);
  auto& from = static_cast<const Error&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Error)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  if (from._internal_temporary() != 0) {
    _this->_impl_.temporary_ = from._impl_.temporary_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Error::InternalSwap(Error* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Error, _impl_.temporary_)
      + sizeof(Error::_impl_.temporary_)
      - PROTOBUF_FIELD_OFFSET(Error, _impl_.code_)>(
          reinterpret_cast<char*>(&_impl_.code_),
          reinterpret_cast<char*>(&other->_impl_.code_));
}

::google::protobuf::Metadata Error::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EmulationRequest::_Internal {
 public:
};

EmulationRequest::EmulationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.EmulationRequest)
}
inline PROTOBUF_NDEBUG_INLINE EmulationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::EmulationRequest& from_msg)
      : node_(arena, from.node_),
        session_(arena, from.session_),
        data_(arena, from.data_),
        _cached_size_{0} {}

EmulationRequest::EmulationRequest(
    ::google::protobuf::Arena* arena,
    const EmulationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EmulationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.EmulationRequest)
}
inline PROTOBUF_NDEBUG_INLINE EmulationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_(arena),
        session_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void EmulationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EmulationRequest::~EmulationRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.EmulationRequest)
  SharedDtor(*this);
}
inline void EmulationRequest::SharedDtor(MessageLite& self) {
  EmulationRequest& this_ = static_cast<EmulationRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_.Destroy();
  this_._impl_.session_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EmulationRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EmulationRequest(arena);
}
constexpr auto EmulationRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EmulationRequest),
                                            alignof(EmulationRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EmulationRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EmulationRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EmulationRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EmulationRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EmulationRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EmulationRequest>(), &EmulationRequest::ByteSizeLong,
            &EmulationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_._cached_size_),
        false,
    },
    &EmulationRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EmulationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 68, 2> EmulationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::EmulationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_.node_)}},
    // string session = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_.session_)}},
    // bytes data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session = 2;
    {PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_.session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 3;
    {PROTOBUF_FIELD_OFFSET(EmulationRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\4\7\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.EmulationRequest"
    "node"
    "session"
  }},
};

PROTOBUF_NOINLINE void EmulationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.EmulationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.ClearToEmpty();
  _impl_.session_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EmulationRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EmulationRequest& this_ = static_cast<const EmulationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EmulationRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EmulationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.EmulationRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node = 1;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.EmulationRequest.node");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string session = 2;
          if (!this_._internal_session().empty()) {
            const std::string& _s = this_._internal_session();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.EmulationRequest.session");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bytes data = 3;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.EmulationRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EmulationRequest::ByteSizeLong(const MessageLite& base) {
          const EmulationRequest& this_ = static_cast<const EmulationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EmulationRequest::ByteSizeLong() const {
          const EmulationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.EmulationRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node = 1;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // string session = 2;
            if (!this_._internal_session().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session());
            }
            // bytes data = 3;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EmulationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmulationRequest*>(&to_msg);
  auto& from = static_cast<const EmulationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.EmulationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_session().empty()) {
    _this->_internal_set_session(from._internal_session());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmulationRequest::CopyFrom(const EmulationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.EmulationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EmulationRequest::InternalSwap(EmulationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_, &other->_impl_.session_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata EmulationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Command::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Command>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Command, _impl_._has_bits_);
};

Command::Command(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Command)
}
inline PROTOBUF_NDEBUG_INLINE Command::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Command& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Command::Command(
    ::google::protobuf::Arena* arena,
    const Command& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Command* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.connect_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ConnectRequest>(
                              arena, *from._impl_.connect_)
                        : nullptr;
  _impl_.subscribe_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubscribeRequest>(
                              arena, *from._impl_.subscribe_)
                        : nullptr;
  _impl_.unsubscribe_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::UnsubscribeRequest>(
                              arena, *from._impl_.unsubscribe_)
                        : nullptr;
  _impl_.publish_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PublishRequest>(
                              arena, *from._impl_.publish_)
                        : nullptr;
  _impl_.presence_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceRequest>(
                              arena, *from._impl_.presence_)
                        : nullptr;
  _impl_.presence_stats_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceStatsRequest>(
                              arena, *from._impl_.presence_stats_)
                        : nullptr;
  _impl_.history_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::HistoryRequest>(
                              arena, *from._impl_.history_)
                        : nullptr;
  _impl_.ping_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PingRequest>(
                              arena, *from._impl_.ping_)
                        : nullptr;
  _impl_.send_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SendRequest>(
                              arena, *from._impl_.send_)
                        : nullptr;
  _impl_.rpc_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RPCRequest>(
                              arena, *from._impl_.rpc_)
                        : nullptr;
  _impl_.refresh_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RefreshRequest>(
                              arena, *from._impl_.refresh_)
                        : nullptr;
  _impl_.sub_refresh_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubRefreshRequest>(
                              arena, *from._impl_.sub_refresh_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Command)
}
inline PROTOBUF_NDEBUG_INLINE Command::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Command::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, connect_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, connect_) +
               sizeof(Impl_::id_));
}
Command::~Command() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Command)
  SharedDtor(*this);
}
inline void Command::SharedDtor(MessageLite& self) {
  Command& this_ = static_cast<Command&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.connect_;
  delete this_._impl_.subscribe_;
  delete this_._impl_.unsubscribe_;
  delete this_._impl_.publish_;
  delete this_._impl_.presence_;
  delete this_._impl_.presence_stats_;
  delete this_._impl_.history_;
  delete this_._impl_.ping_;
  delete this_._impl_.send_;
  delete this_._impl_.rpc_;
  delete this_._impl_.refresh_;
  delete this_._impl_.sub_refresh_;
  this_._impl_.~Impl_();
}

inline void* Command::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Command(arena);
}
constexpr auto Command::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Command),
                                            alignof(Command));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Command::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Command_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Command::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Command>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Command::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Command>(), &Command::ByteSizeLong,
            &Command::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Command, _impl_._cached_size_),
        false,
    },
    &Command::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Command::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 12, 0, 2> Command::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Command, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934534,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Command>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Command, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Command, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .centrifugal.centrifuge.protocol.ConnectRequest connect = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Command, _impl_.connect_)}},
    // .centrifugal.centrifuge.protocol.SubscribeRequest subscribe = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Command, _impl_.subscribe_)}},
    // .centrifugal.centrifuge.protocol.UnsubscribeRequest unsubscribe = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(Command, _impl_.unsubscribe_)}},
    // .centrifugal.centrifuge.protocol.PublishRequest publish = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(Command, _impl_.publish_)}},
    // .centrifugal.centrifuge.protocol.PresenceRequest presence = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(Command, _impl_.presence_)}},
    // .centrifugal.centrifuge.protocol.PresenceStatsRequest presence_stats = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 5, PROTOBUF_FIELD_OFFSET(Command, _impl_.presence_stats_)}},
    // .centrifugal.centrifuge.protocol.HistoryRequest history = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 6, 6, PROTOBUF_FIELD_OFFSET(Command, _impl_.history_)}},
    // .centrifugal.centrifuge.protocol.PingRequest ping = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 7, 7, PROTOBUF_FIELD_OFFSET(Command, _impl_.ping_)}},
    // .centrifugal.centrifuge.protocol.SendRequest send = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 8, 8, PROTOBUF_FIELD_OFFSET(Command, _impl_.send_)}},
    // .centrifugal.centrifuge.protocol.RPCRequest rpc = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 9, 9, PROTOBUF_FIELD_OFFSET(Command, _impl_.rpc_)}},
    // .centrifugal.centrifuge.protocol.RefreshRequest refresh = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 10, 10, PROTOBUF_FIELD_OFFSET(Command, _impl_.refresh_)}},
    // .centrifugal.centrifuge.protocol.SubRefreshRequest sub_refresh = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 11, 11, PROTOBUF_FIELD_OFFSET(Command, _impl_.sub_refresh_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .centrifugal.centrifuge.protocol.ConnectRequest connect = 4;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.connect_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.SubscribeRequest subscribe = 5;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.subscribe_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.UnsubscribeRequest unsubscribe = 6;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.unsubscribe_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PublishRequest publish = 7;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.publish_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PresenceRequest presence = 8;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.presence_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PresenceStatsRequest presence_stats = 9;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.presence_stats_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.HistoryRequest history = 10;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.history_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PingRequest ping = 11;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.ping_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.SendRequest send = 12;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.send_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.RPCRequest rpc = 13;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.rpc_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.RefreshRequest refresh = 14;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.refresh_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.SubRefreshRequest sub_refresh = 15;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.sub_refresh_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::UnsubscribeRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PublishRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceStatsRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::HistoryRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PingRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SendRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RPCRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RefreshRequest>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubRefreshRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Command)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.connect_ != nullptr);
      _impl_.connect_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.subscribe_ != nullptr);
      _impl_.subscribe_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.unsubscribe_ != nullptr);
      _impl_.unsubscribe_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.publish_ != nullptr);
      _impl_.publish_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.presence_ != nullptr);
      _impl_.presence_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.presence_stats_ != nullptr);
      _impl_.presence_stats_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.history_ != nullptr);
      _impl_.history_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.ping_ != nullptr);
      _impl_.ping_->Clear();
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.send_ != nullptr);
      _impl_.send_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.rpc_ != nullptr);
      _impl_.rpc_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.refresh_ != nullptr);
      _impl_.refresh_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.sub_refresh_ != nullptr);
      _impl_.sub_refresh_->Clear();
    }
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Command::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Command& this_ = static_cast<const Command&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Command::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Command& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Command)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.ConnectRequest connect = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.connect_, this_._impl_.connect_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.SubscribeRequest subscribe = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.subscribe_, this_._impl_.subscribe_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.UnsubscribeRequest unsubscribe = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.unsubscribe_, this_._impl_.unsubscribe_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PublishRequest publish = 7;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.publish_, this_._impl_.publish_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PresenceRequest presence = 8;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.presence_, this_._impl_.presence_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PresenceStatsRequest presence_stats = 9;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.presence_stats_, this_._impl_.presence_stats_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.HistoryRequest history = 10;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.history_, this_._impl_.history_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PingRequest ping = 11;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.ping_, this_._impl_.ping_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.SendRequest send = 12;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.send_, this_._impl_.send_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.RPCRequest rpc = 13;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.rpc_, this_._impl_.rpc_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.RefreshRequest refresh = 14;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.refresh_, this_._impl_.refresh_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.SubRefreshRequest sub_refresh = 15;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.sub_refresh_, this_._impl_.sub_refresh_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Command)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Command::ByteSizeLong(const MessageLite& base) {
          const Command& this_ = static_cast<const Command&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Command::ByteSizeLong() const {
          const Command& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Command)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .centrifugal.centrifuge.protocol.ConnectRequest connect = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.connect_);
            }
            // .centrifugal.centrifuge.protocol.SubscribeRequest subscribe = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_);
            }
            // .centrifugal.centrifuge.protocol.UnsubscribeRequest unsubscribe = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.unsubscribe_);
            }
            // .centrifugal.centrifuge.protocol.PublishRequest publish = 7;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.publish_);
            }
            // .centrifugal.centrifuge.protocol.PresenceRequest presence = 8;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.presence_);
            }
            // .centrifugal.centrifuge.protocol.PresenceStatsRequest presence_stats = 9;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.presence_stats_);
            }
            // .centrifugal.centrifuge.protocol.HistoryRequest history = 10;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.history_);
            }
            // .centrifugal.centrifuge.protocol.PingRequest ping = 11;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_);
            }
          }
          if (cached_has_bits & 0x00000f00u) {
            // .centrifugal.centrifuge.protocol.SendRequest send = 12;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.send_);
            }
            // .centrifugal.centrifuge.protocol.RPCRequest rpc = 13;
            if (cached_has_bits & 0x00000200u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rpc_);
            }
            // .centrifugal.centrifuge.protocol.RefreshRequest refresh = 14;
            if (cached_has_bits & 0x00000400u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.refresh_);
            }
            // .centrifugal.centrifuge.protocol.SubRefreshRequest sub_refresh = 15;
            if (cached_has_bits & 0x00000800u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sub_refresh_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Command::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Command*>(&to_msg);
  auto& from = static_cast<const Command&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Command)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.connect_ != nullptr);
      if (_this->_impl_.connect_ == nullptr) {
        _this->_impl_.connect_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ConnectRequest>(arena, *from._impl_.connect_);
      } else {
        _this->_impl_.connect_->MergeFrom(*from._impl_.connect_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.subscribe_ != nullptr);
      if (_this->_impl_.subscribe_ == nullptr) {
        _this->_impl_.subscribe_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubscribeRequest>(arena, *from._impl_.subscribe_);
      } else {
        _this->_impl_.subscribe_->MergeFrom(*from._impl_.subscribe_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.unsubscribe_ != nullptr);
      if (_this->_impl_.unsubscribe_ == nullptr) {
        _this->_impl_.unsubscribe_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::UnsubscribeRequest>(arena, *from._impl_.unsubscribe_);
      } else {
        _this->_impl_.unsubscribe_->MergeFrom(*from._impl_.unsubscribe_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.publish_ != nullptr);
      if (_this->_impl_.publish_ == nullptr) {
        _this->_impl_.publish_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PublishRequest>(arena, *from._impl_.publish_);
      } else {
        _this->_impl_.publish_->MergeFrom(*from._impl_.publish_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.presence_ != nullptr);
      if (_this->_impl_.presence_ == nullptr) {
        _this->_impl_.presence_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceRequest>(arena, *from._impl_.presence_);
      } else {
        _this->_impl_.presence_->MergeFrom(*from._impl_.presence_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.presence_stats_ != nullptr);
      if (_this->_impl_.presence_stats_ == nullptr) {
        _this->_impl_.presence_stats_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceStatsRequest>(arena, *from._impl_.presence_stats_);
      } else {
        _this->_impl_.presence_stats_->MergeFrom(*from._impl_.presence_stats_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.history_ != nullptr);
      if (_this->_impl_.history_ == nullptr) {
        _this->_impl_.history_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::HistoryRequest>(arena, *from._impl_.history_);
      } else {
        _this->_impl_.history_->MergeFrom(*from._impl_.history_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.ping_ != nullptr);
      if (_this->_impl_.ping_ == nullptr) {
        _this->_impl_.ping_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PingRequest>(arena, *from._impl_.ping_);
      } else {
        _this->_impl_.ping_->MergeFrom(*from._impl_.ping_);
      }
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.send_ != nullptr);
      if (_this->_impl_.send_ == nullptr) {
        _this->_impl_.send_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SendRequest>(arena, *from._impl_.send_);
      } else {
        _this->_impl_.send_->MergeFrom(*from._impl_.send_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.rpc_ != nullptr);
      if (_this->_impl_.rpc_ == nullptr) {
        _this->_impl_.rpc_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RPCRequest>(arena, *from._impl_.rpc_);
      } else {
        _this->_impl_.rpc_->MergeFrom(*from._impl_.rpc_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.refresh_ != nullptr);
      if (_this->_impl_.refresh_ == nullptr) {
        _this->_impl_.refresh_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RefreshRequest>(arena, *from._impl_.refresh_);
      } else {
        _this->_impl_.refresh_->MergeFrom(*from._impl_.refresh_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.sub_refresh_ != nullptr);
      if (_this->_impl_.sub_refresh_ == nullptr) {
        _this->_impl_.sub_refresh_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubRefreshRequest>(arena, *from._impl_.sub_refresh_);
      } else {
        _this->_impl_.sub_refresh_->MergeFrom(*from._impl_.sub_refresh_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Command::InternalSwap(Command* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Command, _impl_.id_)
      + sizeof(Command::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Command, _impl_.connect_)>(
          reinterpret_cast<char*>(&_impl_.connect_),
          reinterpret_cast<char*>(&other->_impl_.connect_));
}

::google::protobuf::Metadata Command::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Reply::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Reply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Reply, _impl_._has_bits_);
};

Reply::Reply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Reply)
}
inline PROTOBUF_NDEBUG_INLINE Reply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Reply& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Reply::Reply(
    ::google::protobuf::Arena* arena,
    const Reply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Reply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.error_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Error>(
                              arena, *from._impl_.error_)
                        : nullptr;
  _impl_.push_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Push>(
                              arena, *from._impl_.push_)
                        : nullptr;
  _impl_.connect_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ConnectResult>(
                              arena, *from._impl_.connect_)
                        : nullptr;
  _impl_.subscribe_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubscribeResult>(
                              arena, *from._impl_.subscribe_)
                        : nullptr;
  _impl_.unsubscribe_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::UnsubscribeResult>(
                              arena, *from._impl_.unsubscribe_)
                        : nullptr;
  _impl_.publish_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PublishResult>(
                              arena, *from._impl_.publish_)
                        : nullptr;
  _impl_.presence_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceResult>(
                              arena, *from._impl_.presence_)
                        : nullptr;
  _impl_.presence_stats_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceStatsResult>(
                              arena, *from._impl_.presence_stats_)
                        : nullptr;
  _impl_.history_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::HistoryResult>(
                              arena, *from._impl_.history_)
                        : nullptr;
  _impl_.ping_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PingResult>(
                              arena, *from._impl_.ping_)
                        : nullptr;
  _impl_.rpc_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RPCResult>(
                              arena, *from._impl_.rpc_)
                        : nullptr;
  _impl_.refresh_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RefreshResult>(
                              arena, *from._impl_.refresh_)
                        : nullptr;
  _impl_.sub_refresh_ = (cached_has_bits & 0x00001000u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubRefreshResult>(
                              arena, *from._impl_.sub_refresh_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Reply)
}
inline PROTOBUF_NDEBUG_INLINE Reply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Reply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, error_) +
               sizeof(Impl_::id_));
}
Reply::~Reply() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Reply)
  SharedDtor(*this);
}
inline void Reply::SharedDtor(MessageLite& self) {
  Reply& this_ = static_cast<Reply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.error_;
  delete this_._impl_.push_;
  delete this_._impl_.connect_;
  delete this_._impl_.subscribe_;
  delete this_._impl_.unsubscribe_;
  delete this_._impl_.publish_;
  delete this_._impl_.presence_;
  delete this_._impl_.presence_stats_;
  delete this_._impl_.history_;
  delete this_._impl_.ping_;
  delete this_._impl_.rpc_;
  delete this_._impl_.refresh_;
  delete this_._impl_.sub_refresh_;
  this_._impl_.~Impl_();
}

inline void* Reply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Reply(arena);
}
constexpr auto Reply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Reply),
                                            alignof(Reply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Reply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Reply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Reply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Reply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Reply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Reply>(), &Reply::ByteSizeLong,
            &Reply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Reply, _impl_._cached_size_),
        false,
    },
    &Reply::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Reply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 13, 0, 2> Reply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Reply, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934532,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Reply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Reply, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Reply, _impl_.id_)}},
    // .centrifugal.centrifuge.protocol.Error error = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Reply, _impl_.error_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .centrifugal.centrifuge.protocol.Push push = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Reply, _impl_.push_)}},
    // .centrifugal.centrifuge.protocol.ConnectResult connect = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(Reply, _impl_.connect_)}},
    // .centrifugal.centrifuge.protocol.SubscribeResult subscribe = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(Reply, _impl_.subscribe_)}},
    // .centrifugal.centrifuge.protocol.UnsubscribeResult unsubscribe = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 4, PROTOBUF_FIELD_OFFSET(Reply, _impl_.unsubscribe_)}},
    // .centrifugal.centrifuge.protocol.PublishResult publish = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(Reply, _impl_.publish_)}},
    // .centrifugal.centrifuge.protocol.PresenceResult presence = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 6, PROTOBUF_FIELD_OFFSET(Reply, _impl_.presence_)}},
    // .centrifugal.centrifuge.protocol.PresenceStatsResult presence_stats = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 7, PROTOBUF_FIELD_OFFSET(Reply, _impl_.presence_stats_)}},
    // .centrifugal.centrifuge.protocol.HistoryResult history = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 8, 8, PROTOBUF_FIELD_OFFSET(Reply, _impl_.history_)}},
    // .centrifugal.centrifuge.protocol.PingResult ping = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 9, 9, PROTOBUF_FIELD_OFFSET(Reply, _impl_.ping_)}},
    // .centrifugal.centrifuge.protocol.RPCResult rpc = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 10, 10, PROTOBUF_FIELD_OFFSET(Reply, _impl_.rpc_)}},
    // .centrifugal.centrifuge.protocol.RefreshResult refresh = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 11, 11, PROTOBUF_FIELD_OFFSET(Reply, _impl_.refresh_)}},
    // .centrifugal.centrifuge.protocol.SubRefreshResult sub_refresh = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 12, 12, PROTOBUF_FIELD_OFFSET(Reply, _impl_.sub_refresh_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .centrifugal.centrifuge.protocol.Error error = 2;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Push push = 4;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.push_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.ConnectResult connect = 5;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.connect_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.SubscribeResult subscribe = 6;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.subscribe_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.UnsubscribeResult unsubscribe = 7;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.unsubscribe_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PublishResult publish = 8;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.publish_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PresenceResult presence = 9;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.presence_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PresenceStatsResult presence_stats = 10;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.presence_stats_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.HistoryResult history = 11;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.history_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.PingResult ping = 12;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.ping_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.RPCResult rpc = 13;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.rpc_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.RefreshResult refresh = 14;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.refresh_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.SubRefreshResult sub_refresh = 15;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.sub_refresh_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Error>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Push>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::UnsubscribeResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PublishResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceStatsResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::HistoryResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PingResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RPCResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RefreshResult>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubRefreshResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Reply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.error_ != nullptr);
      _impl_.error_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.push_ != nullptr);
      _impl_.push_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.connect_ != nullptr);
      _impl_.connect_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.subscribe_ != nullptr);
      _impl_.subscribe_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.unsubscribe_ != nullptr);
      _impl_.unsubscribe_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.publish_ != nullptr);
      _impl_.publish_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.presence_ != nullptr);
      _impl_.presence_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.presence_stats_ != nullptr);
      _impl_.presence_stats_->Clear();
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.history_ != nullptr);
      _impl_.history_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.ping_ != nullptr);
      _impl_.ping_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.rpc_ != nullptr);
      _impl_.rpc_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.refresh_ != nullptr);
      _impl_.refresh_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.sub_refresh_ != nullptr);
      _impl_.sub_refresh_->Clear();
    }
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Reply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Reply& this_ = static_cast<const Reply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Reply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Reply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Reply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.Error error = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.error_, this_._impl_.error_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Push push = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.push_, this_._impl_.push_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.ConnectResult connect = 5;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.connect_, this_._impl_.connect_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.SubscribeResult subscribe = 6;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.subscribe_, this_._impl_.subscribe_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.UnsubscribeResult unsubscribe = 7;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.unsubscribe_, this_._impl_.unsubscribe_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PublishResult publish = 8;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.publish_, this_._impl_.publish_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PresenceResult presence = 9;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.presence_, this_._impl_.presence_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PresenceStatsResult presence_stats = 10;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.presence_stats_, this_._impl_.presence_stats_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.HistoryResult history = 11;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.history_, this_._impl_.history_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.PingResult ping = 12;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.ping_, this_._impl_.ping_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.RPCResult rpc = 13;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.rpc_, this_._impl_.rpc_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.RefreshResult refresh = 14;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.refresh_, this_._impl_.refresh_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.SubRefreshResult sub_refresh = 15;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.sub_refresh_, this_._impl_.sub_refresh_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Reply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Reply::ByteSizeLong(const MessageLite& base) {
          const Reply& this_ = static_cast<const Reply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Reply::ByteSizeLong() const {
          const Reply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Reply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .centrifugal.centrifuge.protocol.Error error = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.error_);
            }
            // .centrifugal.centrifuge.protocol.Push push = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.push_);
            }
            // .centrifugal.centrifuge.protocol.ConnectResult connect = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.connect_);
            }
            // .centrifugal.centrifuge.protocol.SubscribeResult subscribe = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_);
            }
            // .centrifugal.centrifuge.protocol.UnsubscribeResult unsubscribe = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.unsubscribe_);
            }
            // .centrifugal.centrifuge.protocol.PublishResult publish = 8;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.publish_);
            }
            // .centrifugal.centrifuge.protocol.PresenceResult presence = 9;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.presence_);
            }
            // .centrifugal.centrifuge.protocol.PresenceStatsResult presence_stats = 10;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.presence_stats_);
            }
          }
          if (cached_has_bits & 0x00001f00u) {
            // .centrifugal.centrifuge.protocol.HistoryResult history = 11;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.history_);
            }
            // .centrifugal.centrifuge.protocol.PingResult ping = 12;
            if (cached_has_bits & 0x00000200u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_);
            }
            // .centrifugal.centrifuge.protocol.RPCResult rpc = 13;
            if (cached_has_bits & 0x00000400u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rpc_);
            }
            // .centrifugal.centrifuge.protocol.RefreshResult refresh = 14;
            if (cached_has_bits & 0x00000800u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.refresh_);
            }
            // .centrifugal.centrifuge.protocol.SubRefreshResult sub_refresh = 15;
            if (cached_has_bits & 0x00001000u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sub_refresh_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Reply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Reply*>(&to_msg);
  auto& from = static_cast<const Reply&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Reply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.error_ != nullptr);
      if (_this->_impl_.error_ == nullptr) {
        _this->_impl_.error_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Error>(arena, *from._impl_.error_);
      } else {
        _this->_impl_.error_->MergeFrom(*from._impl_.error_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.push_ != nullptr);
      if (_this->_impl_.push_ == nullptr) {
        _this->_impl_.push_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Push>(arena, *from._impl_.push_);
      } else {
        _this->_impl_.push_->MergeFrom(*from._impl_.push_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.connect_ != nullptr);
      if (_this->_impl_.connect_ == nullptr) {
        _this->_impl_.connect_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ConnectResult>(arena, *from._impl_.connect_);
      } else {
        _this->_impl_.connect_->MergeFrom(*from._impl_.connect_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.subscribe_ != nullptr);
      if (_this->_impl_.subscribe_ == nullptr) {
        _this->_impl_.subscribe_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubscribeResult>(arena, *from._impl_.subscribe_);
      } else {
        _this->_impl_.subscribe_->MergeFrom(*from._impl_.subscribe_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.unsubscribe_ != nullptr);
      if (_this->_impl_.unsubscribe_ == nullptr) {
        _this->_impl_.unsubscribe_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::UnsubscribeResult>(arena, *from._impl_.unsubscribe_);
      } else {
        _this->_impl_.unsubscribe_->MergeFrom(*from._impl_.unsubscribe_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.publish_ != nullptr);
      if (_this->_impl_.publish_ == nullptr) {
        _this->_impl_.publish_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PublishResult>(arena, *from._impl_.publish_);
      } else {
        _this->_impl_.publish_->MergeFrom(*from._impl_.publish_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.presence_ != nullptr);
      if (_this->_impl_.presence_ == nullptr) {
        _this->_impl_.presence_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceResult>(arena, *from._impl_.presence_);
      } else {
        _this->_impl_.presence_->MergeFrom(*from._impl_.presence_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.presence_stats_ != nullptr);
      if (_this->_impl_.presence_stats_ == nullptr) {
        _this->_impl_.presence_stats_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PresenceStatsResult>(arena, *from._impl_.presence_stats_);
      } else {
        _this->_impl_.presence_stats_->MergeFrom(*from._impl_.presence_stats_);
      }
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.history_ != nullptr);
      if (_this->_impl_.history_ == nullptr) {
        _this->_impl_.history_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::HistoryResult>(arena, *from._impl_.history_);
      } else {
        _this->_impl_.history_->MergeFrom(*from._impl_.history_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.ping_ != nullptr);
      if (_this->_impl_.ping_ == nullptr) {
        _this->_impl_.ping_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::PingResult>(arena, *from._impl_.ping_);
      } else {
        _this->_impl_.ping_->MergeFrom(*from._impl_.ping_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.rpc_ != nullptr);
      if (_this->_impl_.rpc_ == nullptr) {
        _this->_impl_.rpc_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RPCResult>(arena, *from._impl_.rpc_);
      } else {
        _this->_impl_.rpc_->MergeFrom(*from._impl_.rpc_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.refresh_ != nullptr);
      if (_this->_impl_.refresh_ == nullptr) {
        _this->_impl_.refresh_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::RefreshResult>(arena, *from._impl_.refresh_);
      } else {
        _this->_impl_.refresh_->MergeFrom(*from._impl_.refresh_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(from._impl_.sub_refresh_ != nullptr);
      if (_this->_impl_.sub_refresh_ == nullptr) {
        _this->_impl_.sub_refresh_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::SubRefreshResult>(arena, *from._impl_.sub_refresh_);
      } else {
        _this->_impl_.sub_refresh_->MergeFrom(*from._impl_.sub_refresh_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Reply::InternalSwap(Reply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Reply, _impl_.id_)
      + sizeof(Reply::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Reply, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Push::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Push>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Push, _impl_._has_bits_);
};

Push::Push(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Push)
}
inline PROTOBUF_NDEBUG_INLINE Push::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Push& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_(arena, from.channel_) {}

Push::Push(
    ::google::protobuf::Arena* arena,
    const Push& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Push* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pub_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Publication>(
                              arena, *from._impl_.pub_)
                        : nullptr;
  _impl_.join_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Join>(
                              arena, *from._impl_.join_)
                        : nullptr;
  _impl_.leave_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Leave>(
                              arena, *from._impl_.leave_)
                        : nullptr;
  _impl_.unsubscribe_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Unsubscribe>(
                              arena, *from._impl_.unsubscribe_)
                        : nullptr;
  _impl_.message_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Message>(
                              arena, *from._impl_.message_)
                        : nullptr;
  _impl_.subscribe_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Subscribe>(
                              arena, *from._impl_.subscribe_)
                        : nullptr;
  _impl_.connect_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Connect>(
                              arena, *from._impl_.connect_)
                        : nullptr;
  _impl_.disconnect_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Disconnect>(
                              arena, *from._impl_.disconnect_)
                        : nullptr;
  _impl_.refresh_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Refresh>(
                              arena, *from._impl_.refresh_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Push)
}
inline PROTOBUF_NDEBUG_INLINE Push::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channel_(arena) {}

inline void Push::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           0,
           offsetof(Impl_, refresh_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::refresh_));
}
Push::~Push() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Push)
  SharedDtor(*this);
}
inline void Push::SharedDtor(MessageLite& self) {
  Push& this_ = static_cast<Push&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  delete this_._impl_.pub_;
  delete this_._impl_.join_;
  delete this_._impl_.leave_;
  delete this_._impl_.unsubscribe_;
  delete this_._impl_.message_;
  delete this_._impl_.subscribe_;
  delete this_._impl_.connect_;
  delete this_._impl_.disconnect_;
  delete this_._impl_.refresh_;
  this_._impl_.~Impl_();
}

inline void* Push::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Push(arena);
}
constexpr auto Push::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Push),
                                            alignof(Push));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Push::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Push_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Push::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Push>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Push::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Push>(), &Push::ByteSizeLong,
            &Push::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Push, _impl_._cached_size_),
        false,
    },
    &Push::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Push::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 9, 60, 2> Push::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Push, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963205,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Push>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string channel = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Push, _impl_.channel_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .centrifugal.centrifuge.protocol.Publication pub = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Push, _impl_.pub_)}},
    // .centrifugal.centrifuge.protocol.Join join = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Push, _impl_.join_)}},
    // .centrifugal.centrifuge.protocol.Leave leave = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(Push, _impl_.leave_)}},
    // .centrifugal.centrifuge.protocol.Unsubscribe unsubscribe = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(Push, _impl_.unsubscribe_)}},
    // .centrifugal.centrifuge.protocol.Message message = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(Push, _impl_.message_)}},
    // .centrifugal.centrifuge.protocol.Subscribe subscribe = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 5, PROTOBUF_FIELD_OFFSET(Push, _impl_.subscribe_)}},
    // .centrifugal.centrifuge.protocol.Connect connect = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 6, 6, PROTOBUF_FIELD_OFFSET(Push, _impl_.connect_)}},
    // .centrifugal.centrifuge.protocol.Disconnect disconnect = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 7, 7, PROTOBUF_FIELD_OFFSET(Push, _impl_.disconnect_)}},
    // .centrifugal.centrifuge.protocol.Refresh refresh = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 8, 8, PROTOBUF_FIELD_OFFSET(Push, _impl_.refresh_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 2;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .centrifugal.centrifuge.protocol.Publication pub = 4;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.pub_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Join join = 5;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.join_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Leave leave = 6;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.leave_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Unsubscribe unsubscribe = 7;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.unsubscribe_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Message message = 8;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.message_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Subscribe subscribe = 9;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.subscribe_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Connect connect = 10;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.connect_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Disconnect disconnect = 11;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.disconnect_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centrifugal.centrifuge.protocol.Refresh refresh = 12;
    {PROTOBUF_FIELD_OFFSET(Push, _impl_.refresh_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Publication>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Join>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Leave>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Unsubscribe>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Message>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Subscribe>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Connect>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Disconnect>()},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Refresh>()},
  }}, {{
    "\44\7\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Push"
    "channel"
  }},
};

PROTOBUF_NOINLINE void Push::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Push)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pub_ != nullptr);
      _impl_.pub_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.join_ != nullptr);
      _impl_.join_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.leave_ != nullptr);
      _impl_.leave_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.unsubscribe_ != nullptr);
      _impl_.unsubscribe_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.message_ != nullptr);
      _impl_.message_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.subscribe_ != nullptr);
      _impl_.subscribe_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.connect_ != nullptr);
      _impl_.connect_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.disconnect_ != nullptr);
      _impl_.disconnect_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.refresh_ != nullptr);
    _impl_.refresh_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Push::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Push& this_ = static_cast<const Push&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Push::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Push& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Push)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 2;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Push.channel");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.Publication pub = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.pub_, this_._impl_.pub_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Join join = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.join_, this_._impl_.join_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Leave leave = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.leave_, this_._impl_.leave_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Unsubscribe unsubscribe = 7;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.unsubscribe_, this_._impl_.unsubscribe_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Message message = 8;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.message_, this_._impl_.message_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Subscribe subscribe = 9;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.subscribe_, this_._impl_.subscribe_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Connect connect = 10;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.connect_, this_._impl_.connect_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Disconnect disconnect = 11;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.disconnect_, this_._impl_.disconnect_->GetCachedSize(), target,
                stream);
          }

          // .centrifugal.centrifuge.protocol.Refresh refresh = 12;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.refresh_, this_._impl_.refresh_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Push)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Push::ByteSizeLong(const MessageLite& base) {
          const Push& this_ = static_cast<const Push&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Push::ByteSizeLong() const {
          const Push& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Push)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string channel = 2;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .centrifugal.centrifuge.protocol.Publication pub = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pub_);
            }
            // .centrifugal.centrifuge.protocol.Join join = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.join_);
            }
            // .centrifugal.centrifuge.protocol.Leave leave = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.leave_);
            }
            // .centrifugal.centrifuge.protocol.Unsubscribe unsubscribe = 7;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.unsubscribe_);
            }
            // .centrifugal.centrifuge.protocol.Message message = 8;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_);
            }
            // .centrifugal.centrifuge.protocol.Subscribe subscribe = 9;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_);
            }
            // .centrifugal.centrifuge.protocol.Connect connect = 10;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.connect_);
            }
            // .centrifugal.centrifuge.protocol.Disconnect disconnect = 11;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.disconnect_);
            }
          }
           {
            // .centrifugal.centrifuge.protocol.Refresh refresh = 12;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.refresh_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Push::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Push*>(&to_msg);
  auto& from = static_cast<const Push&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Push)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pub_ != nullptr);
      if (_this->_impl_.pub_ == nullptr) {
        _this->_impl_.pub_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Publication>(arena, *from._impl_.pub_);
      } else {
        _this->_impl_.pub_->MergeFrom(*from._impl_.pub_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.join_ != nullptr);
      if (_this->_impl_.join_ == nullptr) {
        _this->_impl_.join_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Join>(arena, *from._impl_.join_);
      } else {
        _this->_impl_.join_->MergeFrom(*from._impl_.join_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.leave_ != nullptr);
      if (_this->_impl_.leave_ == nullptr) {
        _this->_impl_.leave_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Leave>(arena, *from._impl_.leave_);
      } else {
        _this->_impl_.leave_->MergeFrom(*from._impl_.leave_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.unsubscribe_ != nullptr);
      if (_this->_impl_.unsubscribe_ == nullptr) {
        _this->_impl_.unsubscribe_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Unsubscribe>(arena, *from._impl_.unsubscribe_);
      } else {
        _this->_impl_.unsubscribe_->MergeFrom(*from._impl_.unsubscribe_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.message_ != nullptr);
      if (_this->_impl_.message_ == nullptr) {
        _this->_impl_.message_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Message>(arena, *from._impl_.message_);
      } else {
        _this->_impl_.message_->MergeFrom(*from._impl_.message_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.subscribe_ != nullptr);
      if (_this->_impl_.subscribe_ == nullptr) {
        _this->_impl_.subscribe_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Subscribe>(arena, *from._impl_.subscribe_);
      } else {
        _this->_impl_.subscribe_->MergeFrom(*from._impl_.subscribe_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.connect_ != nullptr);
      if (_this->_impl_.connect_ == nullptr) {
        _this->_impl_.connect_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Connect>(arena, *from._impl_.connect_);
      } else {
        _this->_impl_.connect_->MergeFrom(*from._impl_.connect_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.disconnect_ != nullptr);
      if (_this->_impl_.disconnect_ == nullptr) {
        _this->_impl_.disconnect_ =
            ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Disconnect>(arena, *from._impl_.disconnect_);
      } else {
        _this->_impl_.disconnect_->MergeFrom(*from._impl_.disconnect_);
      }
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(from._impl_.refresh_ != nullptr);
    if (_this->_impl_.refresh_ == nullptr) {
      _this->_impl_.refresh_ =
          ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::Refresh>(arena, *from._impl_.refresh_);
    } else {
      _this->_impl_.refresh_->MergeFrom(*from._impl_.refresh_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Push::CopyFrom(const Push& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Push::InternalSwap(Push* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Push, _impl_.refresh_)
      + sizeof(Push::_impl_.refresh_)
      - PROTOBUF_FIELD_OFFSET(Push, _impl_.pub_)>(
          reinterpret_cast<char*>(&_impl_.pub_),
          reinterpret_cast<char*>(&other->_impl_.pub_));
}

::google::protobuf::Metadata Push::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClientInfo::_Internal {
 public:
};

ClientInfo::ClientInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.ClientInfo)
}
inline PROTOBUF_NDEBUG_INLINE ClientInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::ClientInfo& from_msg)
      : user_(arena, from.user_),
        client_(arena, from.client_),
        conn_info_(arena, from.conn_info_),
        chan_info_(arena, from.chan_info_),
        _cached_size_{0} {}

ClientInfo::ClientInfo(
    ::google::protobuf::Arena* arena,
    const ClientInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.ClientInfo)
}
inline PROTOBUF_NDEBUG_INLINE ClientInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_(arena),
        client_(arena),
        conn_info_(arena),
        chan_info_(arena),
        _cached_size_{0} {}

inline void ClientInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientInfo::~ClientInfo() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.ClientInfo)
  SharedDtor(*this);
}
inline void ClientInfo::SharedDtor(MessageLite& self) {
  ClientInfo& this_ = static_cast<ClientInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_.Destroy();
  this_._impl_.client_.Destroy();
  this_._impl_.conn_info_.Destroy();
  this_._impl_.chan_info_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClientInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientInfo(arena);
}
constexpr auto ClientInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClientInfo),
                                            alignof(ClientInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientInfo>(), &ClientInfo::ByteSizeLong,
            &ClientInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_._cached_size_),
        false,
    },
    &ClientInfo::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> ClientInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ClientInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes chan_info = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.chan_info_)}},
    // string user = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.user_)}},
    // string client = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.client_)}},
    // bytes conn_info = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.conn_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user = 1;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client = 2;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes conn_info = 3;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.conn_info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes chan_info = 4;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.chan_info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\4\6\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.ClientInfo"
    "user"
    "client"
  }},
};

PROTOBUF_NOINLINE void ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.ClientInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_.ClearToEmpty();
  _impl_.client_.ClearToEmpty();
  _impl_.conn_info_.ClearToEmpty();
  _impl_.chan_info_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientInfo& this_ = static_cast<const ClientInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.ClientInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user = 1;
          if (!this_._internal_user().empty()) {
            const std::string& _s = this_._internal_user();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ClientInfo.user");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string client = 2;
          if (!this_._internal_client().empty()) {
            const std::string& _s = this_._internal_client();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ClientInfo.client");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bytes conn_info = 3;
          if (!this_._internal_conn_info().empty()) {
            const std::string& _s = this_._internal_conn_info();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes chan_info = 4;
          if (!this_._internal_chan_info().empty()) {
            const std::string& _s = this_._internal_chan_info();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.ClientInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientInfo::ByteSizeLong(const MessageLite& base) {
          const ClientInfo& this_ = static_cast<const ClientInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientInfo::ByteSizeLong() const {
          const ClientInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.ClientInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user = 1;
            if (!this_._internal_user().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user());
            }
            // string client = 2;
            if (!this_._internal_client().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client());
            }
            // bytes conn_info = 3;
            if (!this_._internal_conn_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_conn_info());
            }
            // bytes chan_info = 4;
            if (!this_._internal_chan_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_chan_info());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientInfo*>(&to_msg);
  auto& from = static_cast<const ClientInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.ClientInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_client().empty()) {
    _this->_internal_set_client(from._internal_client());
  }
  if (!from._internal_conn_info().empty()) {
    _this->_internal_set_conn_info(from._internal_conn_info());
  }
  if (!from._internal_chan_info().empty()) {
    _this->_internal_set_chan_info(from._internal_chan_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientInfo::CopyFrom(const ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientInfo::InternalSwap(ClientInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_, &other->_impl_.client_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conn_info_, &other->_impl_.conn_info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chan_info_, &other->_impl_.chan_info_, arena);
}

::google::protobuf::Metadata ClientInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Publication_TagsEntry_DoNotUse::Publication_TagsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Publication_TagsEntry_DoNotUse::Publication_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Publication_TagsEntry_DoNotUse::Publication_TagsEntry_DoNotUse() : SuperType() {}
              Publication_TagsEntry_DoNotUse::Publication_TagsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Publication_TagsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Publication_TagsEntry_DoNotUse(arena);
              }
              constexpr auto Publication_TagsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Publication_TagsEntry_DoNotUse),
                                                          alignof(Publication_TagsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Publication_TagsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Publication_TagsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Publication_TagsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Publication_TagsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Publication_TagsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Publication_TagsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Publication_TagsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Publication_TagsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_protocol_2fclient_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Publication_TagsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> Publication_TagsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Publication_TagsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Publication_TagsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Publication_TagsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Publication_TagsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Publication_TagsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Publication_TagsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Publication.TagsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Publication::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Publication>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Publication, _impl_._has_bits_);
};

Publication::Publication(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Publication)
}
inline PROTOBUF_NDEBUG_INLINE Publication::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Publication& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        data_(arena, from.data_),
        channel_(arena, from.channel_) {}

Publication::Publication(
    ::google::protobuf::Arena* arena,
    const Publication& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Publication* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ClientInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, delta_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::delta_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Publication)
}
inline PROTOBUF_NDEBUG_INLINE Publication::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        data_(arena),
        channel_(arena) {}

inline void Publication::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, info_),
           0,
           offsetof(Impl_, delta_) -
               offsetof(Impl_, info_) +
               sizeof(Impl_::delta_));
}
Publication::~Publication() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Publication)
  SharedDtor(*this);
}
inline void Publication::SharedDtor(MessageLite& self) {
  Publication& this_ = static_cast<Publication&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.channel_.Destroy();
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* Publication::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Publication(arena);
}
constexpr auto Publication::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Publication, _impl_.tags_) +
          decltype(Publication::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Publication, _impl_.tags_) +
          decltype(Publication::_impl_.tags_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Publication), alignof(Publication), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Publication::PlacementNew_,
                                 sizeof(Publication),
                                 alignof(Publication));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Publication::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Publication_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Publication::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Publication>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Publication::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Publication>(), &Publication::ByteSizeLong,
            &Publication::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Publication, _impl_._cached_size_),
        false,
    },
    &Publication::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Publication::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 63, 2> Publication::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Publication, _impl_._has_bits_),
    0, // no _extensions_
    10, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966279,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Publication>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool delta = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Publication, _impl_.delta_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Publication, _impl_.delta_)}},
    // int64 time = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Publication, _impl_.time_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Publication, _impl_.time_)}},
    // string channel = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Publication, _impl_.channel_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Publication, _impl_.data_)}},
    // .centrifugal.centrifuge.protocol.ClientInfo info = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Publication, _impl_.info_)}},
    // uint64 offset = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Publication, _impl_.offset_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Publication, _impl_.offset_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .centrifugal.centrifuge.protocol.ClientInfo info = 5;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 offset = 6;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.offset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // map<string, string> tags = 7;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.tags_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool delta = 8;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.delta_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 time = 9;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string channel = 10;
    {PROTOBUF_FIELD_OFFSET(Publication, _impl_.channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ClientInfo>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Publication()._impl_.tags_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\53\0\0\0\4\0\0\7"
    "centrifugal.centrifuge.protocol.Publication"
    "tags"
    "channel"
  }},
};

PROTOBUF_NOINLINE void Publication::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Publication)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.data_.ClearToEmpty();
  _impl_.channel_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.delta_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.delta_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Publication::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Publication& this_ = static_cast<const Publication&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Publication::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Publication& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Publication)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 4;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.ClientInfo info = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          // uint64 offset = 6;
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_offset(), target);
          }

          // map<string, string> tags = 7;
          if (!this_._internal_tags().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_tags();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Publication.tags");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Publication.tags");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Publication.tags");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Publication.tags");
              }
            }
          }

          // bool delta = 8;
          if (this_._internal_delta() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_delta(), target);
          }

          // int64 time = 9;
          if (this_._internal_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_time(), target);
          }

          // string channel = 10;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Publication.channel");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Publication)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Publication::ByteSizeLong(const MessageLite& base) {
          const Publication& this_ = static_cast<const Publication&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Publication::ByteSizeLong() const {
          const Publication& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Publication)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> tags = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags_size());
              for (const auto& entry : this_._internal_tags()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // bytes data = 4;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string channel = 10;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
          }
           {
            // .centrifugal.centrifuge.protocol.ClientInfo info = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
           {
            // uint64 offset = 6;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
            // int64 time = 9;
            if (this_._internal_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_time());
            }
            // bool delta = 8;
            if (this_._internal_delta() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Publication::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Publication*>(&to_msg);
  auto& from = static_cast<const Publication&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Publication)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ClientInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  if (from._internal_delta() != 0) {
    _this->_impl_.delta_ = from._impl_.delta_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Publication::CopyFrom(const Publication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Publication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Publication::InternalSwap(Publication* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Publication, _impl_.delta_)
      + sizeof(Publication::_impl_.delta_)
      - PROTOBUF_FIELD_OFFSET(Publication, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::google::protobuf::Metadata Publication::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Join::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Join>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Join, _impl_._has_bits_);
};

Join::Join(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Join)
}
inline PROTOBUF_NDEBUG_INLINE Join::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Join& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Join::Join(
    ::google::protobuf::Arena* arena,
    const Join& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Join* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ClientInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Join)
}
inline PROTOBUF_NDEBUG_INLINE Join::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Join::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
Join::~Join() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Join)
  SharedDtor(*this);
}
inline void Join::SharedDtor(MessageLite& self) {
  Join& this_ = static_cast<Join&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* Join::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Join(arena);
}
constexpr auto Join::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Join),
                                            alignof(Join));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Join::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Join_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Join::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Join>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Join::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Join>(), &Join::ByteSizeLong,
            &Join::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Join, _impl_._cached_size_),
        false,
    },
    &Join::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Join::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Join::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Join, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Join>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Join, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(Join, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ClientInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Join::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Join)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Join::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Join& this_ = static_cast<const Join&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Join::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Join& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Join)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Join)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Join::ByteSizeLong(const MessageLite& base) {
          const Join& this_ = static_cast<const Join&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Join::ByteSizeLong() const {
          const Join& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Join)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Join::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Join*>(&to_msg);
  auto& from = static_cast<const Join&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Join)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ClientInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Join::CopyFrom(const Join& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Join)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Join::InternalSwap(Join* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata Join::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Leave::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Leave>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Leave, _impl_._has_bits_);
};

Leave::Leave(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Leave)
}
inline PROTOBUF_NDEBUG_INLINE Leave::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Leave& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Leave::Leave(
    ::google::protobuf::Arena* arena,
    const Leave& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Leave* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ClientInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Leave)
}
inline PROTOBUF_NDEBUG_INLINE Leave::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Leave::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
Leave::~Leave() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Leave)
  SharedDtor(*this);
}
inline void Leave::SharedDtor(MessageLite& self) {
  Leave& this_ = static_cast<Leave&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* Leave::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Leave(arena);
}
constexpr auto Leave::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Leave),
                                            alignof(Leave));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Leave::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Leave_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Leave::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Leave>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Leave::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Leave>(), &Leave::ByteSizeLong,
            &Leave::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Leave, _impl_._cached_size_),
        false,
    },
    &Leave::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Leave::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Leave::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Leave, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Leave>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Leave, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(Leave, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ClientInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Leave::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Leave)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Leave::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Leave& this_ = static_cast<const Leave&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Leave::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Leave& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Leave)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Leave)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Leave::ByteSizeLong(const MessageLite& base) {
          const Leave& this_ = static_cast<const Leave&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Leave::ByteSizeLong() const {
          const Leave& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Leave)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .centrifugal.centrifuge.protocol.ClientInfo info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Leave::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Leave*>(&to_msg);
  auto& from = static_cast<const Leave&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Leave)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::ClientInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Leave::CopyFrom(const Leave& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Leave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Leave::InternalSwap(Leave* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata Leave::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Unsubscribe::_Internal {
 public:
};

Unsubscribe::Unsubscribe(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Unsubscribe)
}
inline PROTOBUF_NDEBUG_INLINE Unsubscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Unsubscribe& from_msg)
      : reason_(arena, from.reason_),
        _cached_size_{0} {}

Unsubscribe::Unsubscribe(
    ::google::protobuf::Arena* arena,
    const Unsubscribe& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Unsubscribe* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Unsubscribe)
}
inline PROTOBUF_NDEBUG_INLINE Unsubscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reason_(arena),
        _cached_size_{0} {}

inline void Unsubscribe::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_ = {};
}
Unsubscribe::~Unsubscribe() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Unsubscribe)
  SharedDtor(*this);
}
inline void Unsubscribe::SharedDtor(MessageLite& self) {
  Unsubscribe& this_ = static_cast<Unsubscribe&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Unsubscribe::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Unsubscribe(arena);
}
constexpr auto Unsubscribe::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Unsubscribe),
                                            alignof(Unsubscribe));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Unsubscribe::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Unsubscribe_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Unsubscribe::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Unsubscribe>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Unsubscribe::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Unsubscribe>(), &Unsubscribe::ByteSizeLong,
            &Unsubscribe::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_._cached_size_),
        false,
    },
    &Unsubscribe::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Unsubscribe::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Unsubscribe::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Unsubscribe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Unsubscribe, _impl_.code_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_.code_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 code = 2;
    {PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\6\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Unsubscribe"
    "reason"
  }},
};

PROTOBUF_NOINLINE void Unsubscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Unsubscribe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _impl_.code_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Unsubscribe::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Unsubscribe& this_ = static_cast<const Unsubscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Unsubscribe::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Unsubscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Unsubscribe)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 code = 2;
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_code(), target);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Unsubscribe.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Unsubscribe)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Unsubscribe::ByteSizeLong(const MessageLite& base) {
          const Unsubscribe& this_ = static_cast<const Unsubscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Unsubscribe::ByteSizeLong() const {
          const Unsubscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Unsubscribe)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // uint32 code = 2;
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Unsubscribe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Unsubscribe*>(&to_msg);
  auto& from = static_cast<const Unsubscribe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Unsubscribe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Unsubscribe::CopyFrom(const Unsubscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Unsubscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Unsubscribe::InternalSwap(Unsubscribe* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
        swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata Unsubscribe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Subscribe::_Internal {
 public:
};

Subscribe::Subscribe(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Subscribe)
}
inline PROTOBUF_NDEBUG_INLINE Subscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Subscribe& from_msg)
      : epoch_(arena, from.epoch_),
        data_(arena, from.data_),
        _cached_size_{0} {}

Subscribe::Subscribe(
    ::google::protobuf::Arena* arena,
    const Subscribe& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Subscribe* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, positioned_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::positioned_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Subscribe)
}
inline PROTOBUF_NDEBUG_INLINE Subscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : epoch_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void Subscribe::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, positioned_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::positioned_));
}
Subscribe::~Subscribe() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Subscribe)
  SharedDtor(*this);
}
inline void Subscribe::SharedDtor(MessageLite& self) {
  Subscribe& this_ = static_cast<Subscribe&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.epoch_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Subscribe::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Subscribe(arena);
}
constexpr auto Subscribe::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Subscribe),
                                            alignof(Subscribe));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Subscribe::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Subscribe_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Subscribe::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Subscribe>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Subscribe::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Subscribe>(), &Subscribe::ByteSizeLong,
            &Subscribe::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Subscribe, _impl_._cached_size_),
        false,
    },
    &Subscribe::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Subscribe::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 55, 2> Subscribe::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967174,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Subscribe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool recoverable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Subscribe, _impl_.recoverable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.recoverable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string epoch = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.epoch_)}},
    // uint64 offset = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Subscribe, _impl_.offset_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.offset_)}},
    // bool positioned = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Subscribe, _impl_.positioned_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.positioned_)}},
    // bytes data = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool recoverable = 1;
    {PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.recoverable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string epoch = 4;
    {PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 offset = 5;
    {PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool positioned = 6;
    {PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.positioned_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes data = 7;
    {PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Subscribe"
    "epoch"
  }},
};

PROTOBUF_NOINLINE void Subscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Subscribe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.epoch_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.positioned_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.positioned_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Subscribe::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Subscribe& this_ = static_cast<const Subscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Subscribe::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Subscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Subscribe)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool recoverable = 1;
          if (this_._internal_recoverable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_recoverable(), target);
          }

          // string epoch = 4;
          if (!this_._internal_epoch().empty()) {
            const std::string& _s = this_._internal_epoch();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Subscribe.epoch");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 offset = 5;
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_offset(), target);
          }

          // bool positioned = 6;
          if (this_._internal_positioned() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_positioned(), target);
          }

          // bytes data = 7;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Subscribe)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Subscribe::ByteSizeLong(const MessageLite& base) {
          const Subscribe& this_ = static_cast<const Subscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Subscribe::ByteSizeLong() const {
          const Subscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Subscribe)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string epoch = 4;
            if (!this_._internal_epoch().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_epoch());
            }
            // bytes data = 7;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // uint64 offset = 5;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
            // bool recoverable = 1;
            if (this_._internal_recoverable() != 0) {
              total_size += 2;
            }
            // bool positioned = 6;
            if (this_._internal_positioned() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Subscribe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Subscribe*>(&to_msg);
  auto& from = static_cast<const Subscribe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Subscribe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_epoch().empty()) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_recoverable() != 0) {
    _this->_impl_.recoverable_ = from._impl_.recoverable_;
  }
  if (from._internal_positioned() != 0) {
    _this->_impl_.positioned_ = from._impl_.positioned_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Subscribe::CopyFrom(const Subscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Subscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Subscribe::InternalSwap(Subscribe* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.epoch_, &other->_impl_.epoch_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.positioned_)
      + sizeof(Subscribe::_impl_.positioned_)
      - PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata Subscribe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message::_Internal {
 public:
};

Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Message& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Message)
  SharedDtor(*this);
}
inline void Message::SharedDtor(MessageLite& self) {
  Message& this_ = static_cast<Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Message(arena);
}
constexpr auto Message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Message),
                                            alignof(Message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Message>(), &Message::ByteSizeLong,
            &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
        false,
    },
    &Message::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Connect_SubsEntry_DoNotUse::Connect_SubsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Connect_SubsEntry_DoNotUse::Connect_SubsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Connect_SubsEntry_DoNotUse::Connect_SubsEntry_DoNotUse() : SuperType() {}
              Connect_SubsEntry_DoNotUse::Connect_SubsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Connect_SubsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Connect_SubsEntry_DoNotUse(arena);
              }
              constexpr auto Connect_SubsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Connect_SubsEntry_DoNotUse),
                                                          alignof(Connect_SubsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Connect_SubsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Connect_SubsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Connect_SubsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Connect_SubsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Connect_SubsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Connect_SubsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Connect_SubsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Connect_SubsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_protocol_2fclient_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Connect_SubsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 61, 2> Connect_SubsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Connect_SubsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Connect_SubsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.SubscribeResult value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Connect_SubsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Connect_SubsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Connect_SubsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .centrifugal.centrifuge.protocol.SubscribeResult value = 2;
    {PROTOBUF_FIELD_OFFSET(Connect_SubsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeResult>()},
  }}, {{
    "\61\3\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Connect.SubsEntry"
    "key"
  }},
};

// ===================================================================

class Connect::_Internal {
 public:
};

Connect::Connect(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Connect)
}
inline PROTOBUF_NDEBUG_INLINE Connect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Connect& from_msg)
      : subs_{visibility, arena, from.subs_},
        client_(arena, from.client_),
        version_(arena, from.version_),
        data_(arena, from.data_),
        session_(arena, from.session_),
        node_(arena, from.node_),
        _cached_size_{0} {}

Connect::Connect(
    ::google::protobuf::Arena* arena,
    const Connect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Connect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ttl_),
           offsetof(Impl_, ping_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::ping_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Connect)
}
inline PROTOBUF_NDEBUG_INLINE Connect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subs_{visibility, arena},
        client_(arena),
        version_(arena),
        data_(arena),
        session_(arena),
        node_(arena),
        _cached_size_{0} {}

inline void Connect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           0,
           offsetof(Impl_, ping_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::ping_));
}
Connect::~Connect() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Connect)
  SharedDtor(*this);
}
inline void Connect::SharedDtor(MessageLite& self) {
  Connect& this_ = static_cast<Connect&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.session_.Destroy();
  this_._impl_.node_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Connect::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Connect(arena);
}
constexpr auto Connect::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Connect, _impl_.subs_) +
          decltype(Connect::_impl_.subs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Connect, _impl_.subs_) +
          decltype(Connect::_impl_.subs_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Connect), alignof(Connect), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Connect::PlacementNew_,
                                 sizeof(Connect),
                                 alignof(Connect));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Connect::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Connect_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Connect::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Connect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Connect::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Connect>(), &Connect::ByteSizeLong,
            &Connect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Connect, _impl_._cached_size_),
        false,
    },
    &Connect::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Connect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 84, 2> Connect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Connect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string client = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.client_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.version_)}},
    // bytes data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool expires = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Connect, _impl_.expires_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.expires_)}},
    // uint32 ttl = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Connect, _impl_.ttl_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.ttl_)}},
    // uint32 ping = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Connect, _impl_.ping_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.ping_)}},
    // bool pong = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Connect, _impl_.pong_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.pong_)}},
    // string session = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.session_)}},
    // string node = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.node_)}},
    // int64 time = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Connect, _impl_.time_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string client = 1;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 3;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, .centrifugal.centrifuge.protocol.SubscribeResult> subs = 4;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.subs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool expires = 5;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 ttl = 6;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 ping = 7;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.ping_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool pong = 8;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.pong_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string session = 9;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string node = 10;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 time = 11;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Connect()._impl_.subs_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeResult>()},
  }}, {{
    "\47\6\7\0\4\0\0\0\0\7\4\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Connect"
    "client"
    "version"
    "subs"
    "session"
    "node"
  }},
};

PROTOBUF_NOINLINE void Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Connect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subs_.Clear();
  _impl_.client_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.session_.ClearToEmpty();
  _impl_.node_.ClearToEmpty();
  ::memset(&_impl_.ttl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ping_) -
      reinterpret_cast<char*>(&_impl_.ttl_)) + sizeof(_impl_.ping_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Connect::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Connect& this_ = static_cast<const Connect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Connect::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Connect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Connect)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client = 1;
          if (!this_._internal_client().empty()) {
            const std::string& _s = this_._internal_client();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Connect.client");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string version = 2;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Connect.version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bytes data = 3;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // map<string, .centrifugal.centrifuge.protocol.SubscribeResult> subs = 4;
          if (!this_._internal_subs().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::centrifugal::centrifuge::protocol::SubscribeResult>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::SubscribeResult,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_subs();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Connect.subs");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Connect.subs");
              }
            }
          }

          // bool expires = 5;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_expires(), target);
          }

          // uint32 ttl = 6;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_ttl(), target);
          }

          // uint32 ping = 7;
          if (this_._internal_ping() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_ping(), target);
          }

          // bool pong = 8;
          if (this_._internal_pong() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_pong(), target);
          }

          // string session = 9;
          if (!this_._internal_session().empty()) {
            const std::string& _s = this_._internal_session();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Connect.session");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string node = 10;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Connect.node");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // int64 time = 11;
          if (this_._internal_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_time(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Connect)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Connect::ByteSizeLong(const MessageLite& base) {
          const Connect& this_ = static_cast<const Connect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Connect::ByteSizeLong() const {
          const Connect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Connect)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .centrifugal.centrifuge.protocol.SubscribeResult> subs = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subs_size());
              for (const auto& entry : this_._internal_subs()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::SubscribeResult,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string client = 1;
            if (!this_._internal_client().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client());
            }
            // string version = 2;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // bytes data = 3;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string session = 9;
            if (!this_._internal_session().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session());
            }
            // string node = 10;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // uint32 ttl = 6;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ttl());
            }
            // bool expires = 5;
            if (this_._internal_expires() != 0) {
              total_size += 2;
            }
            // bool pong = 8;
            if (this_._internal_pong() != 0) {
              total_size += 2;
            }
            // int64 time = 11;
            if (this_._internal_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_time());
            }
            // uint32 ping = 7;
            if (this_._internal_ping() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ping());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Connect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Connect*>(&to_msg);
  auto& from = static_cast<const Connect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Connect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subs_.MergeFrom(from._impl_.subs_);
  if (!from._internal_client().empty()) {
    _this->_internal_set_client(from._internal_client());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_session().empty()) {
    _this->_internal_set_session(from._internal_session());
  }
  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_pong() != 0) {
    _this->_impl_.pong_ = from._impl_.pong_;
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  if (from._internal_ping() != 0) {
    _this->_impl_.ping_ = from._impl_.ping_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Connect::CopyFrom(const Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Connect::InternalSwap(Connect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subs_.InternalSwap(&other->_impl_.subs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_, &other->_impl_.client_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_, &other->_impl_.session_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Connect, _impl_.ping_)
      + sizeof(Connect::_impl_.ping_)
      - PROTOBUF_FIELD_OFFSET(Connect, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata Connect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Disconnect::_Internal {
 public:
};

Disconnect::Disconnect(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Disconnect)
}
inline PROTOBUF_NDEBUG_INLINE Disconnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::Disconnect& from_msg)
      : reason_(arena, from.reason_),
        _cached_size_{0} {}

Disconnect::Disconnect(
    ::google::protobuf::Arena* arena,
    const Disconnect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Disconnect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, code_),
           offsetof(Impl_, reconnect_) -
               offsetof(Impl_, code_) +
               sizeof(Impl_::reconnect_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.Disconnect)
}
inline PROTOBUF_NDEBUG_INLINE Disconnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reason_(arena),
        _cached_size_{0} {}

inline void Disconnect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_),
           0,
           offsetof(Impl_, reconnect_) -
               offsetof(Impl_, code_) +
               sizeof(Impl_::reconnect_));
}
Disconnect::~Disconnect() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Disconnect)
  SharedDtor(*this);
}
inline void Disconnect::SharedDtor(MessageLite& self) {
  Disconnect& this_ = static_cast<Disconnect&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Disconnect::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Disconnect(arena);
}
constexpr auto Disconnect::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Disconnect),
                                            alignof(Disconnect));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Disconnect::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Disconnect_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Disconnect::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Disconnect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Disconnect::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Disconnect>(), &Disconnect::ByteSizeLong,
            &Disconnect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Disconnect, _impl_._cached_size_),
        false,
    },
    &Disconnect::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Disconnect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 57, 2> Disconnect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Disconnect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Disconnect, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.code_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.reason_)}},
    // bool reconnect = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Disconnect, _impl_.reconnect_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.reconnect_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 code = 1;
    {PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool reconnect = 3;
    {PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.reconnect_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\52\0\6\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.Disconnect"
    "reason"
  }},
};

PROTOBUF_NOINLINE void Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Disconnect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  ::memset(&_impl_.code_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reconnect_) -
      reinterpret_cast<char*>(&_impl_.code_)) + sizeof(_impl_.reconnect_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Disconnect::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Disconnect& this_ = static_cast<const Disconnect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Disconnect::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Disconnect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Disconnect)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 code = 1;
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_code(), target);
          }

          // string reason = 2;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.Disconnect.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool reconnect = 3;
          if (this_._internal_reconnect() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_reconnect(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Disconnect)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Disconnect::ByteSizeLong(const MessageLite& base) {
          const Disconnect& this_ = static_cast<const Disconnect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Disconnect::ByteSizeLong() const {
          const Disconnect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Disconnect)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string reason = 2;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // uint32 code = 1;
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
            // bool reconnect = 3;
            if (this_._internal_reconnect() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Disconnect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Disconnect*>(&to_msg);
  auto& from = static_cast<const Disconnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Disconnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  if (from._internal_reconnect() != 0) {
    _this->_impl_.reconnect_ = from._impl_.reconnect_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Disconnect::CopyFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Disconnect::InternalSwap(Disconnect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.reconnect_)
      + sizeof(Disconnect::_impl_.reconnect_)
      - PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.code_)>(
          reinterpret_cast<char*>(&_impl_.code_),
          reinterpret_cast<char*>(&other->_impl_.code_));
}

::google::protobuf::Metadata Disconnect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Refresh::_Internal {
 public:
};

Refresh::Refresh(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.Refresh)
}
Refresh::Refresh(
    ::google::protobuf::Arena* arena, const Refresh& from)
    : Refresh(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Refresh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Refresh::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expires_),
           0,
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, expires_) +
               sizeof(Impl_::ttl_));
}
Refresh::~Refresh() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.Refresh)
  SharedDtor(*this);
}
inline void Refresh::SharedDtor(MessageLite& self) {
  Refresh& this_ = static_cast<Refresh&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Refresh::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Refresh(arena);
}
constexpr auto Refresh::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Refresh),
                                            alignof(Refresh));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Refresh::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Refresh_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Refresh::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Refresh>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Refresh::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Refresh>(), &Refresh::ByteSizeLong,
            &Refresh::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Refresh, _impl_._cached_size_),
        false,
    },
    &Refresh::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Refresh::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Refresh::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Refresh>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 ttl = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Refresh, _impl_.ttl_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Refresh, _impl_.ttl_)}},
    // bool expires = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Refresh, _impl_.expires_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Refresh, _impl_.expires_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool expires = 1;
    {PROTOBUF_FIELD_OFFSET(Refresh, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 ttl = 2;
    {PROTOBUF_FIELD_OFFSET(Refresh, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Refresh::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.Refresh)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.expires_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ttl_) -
      reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.ttl_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Refresh::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Refresh& this_ = static_cast<const Refresh&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Refresh::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Refresh& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.Refresh)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool expires = 1;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_expires(), target);
          }

          // uint32 ttl = 2;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_ttl(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.Refresh)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Refresh::ByteSizeLong(const MessageLite& base) {
          const Refresh& this_ = static_cast<const Refresh&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Refresh::ByteSizeLong() const {
          const Refresh& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.Refresh)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool expires = 1;
            if (this_._internal_expires() != 0) {
              total_size += 2;
            }
            // uint32 ttl = 2;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ttl());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Refresh::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Refresh*>(&to_msg);
  auto& from = static_cast<const Refresh&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.Refresh)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Refresh::CopyFrom(const Refresh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.Refresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Refresh::InternalSwap(Refresh* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Refresh, _impl_.ttl_)
      + sizeof(Refresh::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(Refresh, _impl_.expires_)>(
          reinterpret_cast<char*>(&_impl_.expires_),
          reinterpret_cast<char*>(&other->_impl_.expires_));
}

::google::protobuf::Metadata Refresh::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ConnectRequest_SubsEntry_DoNotUse::ConnectRequest_SubsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ConnectRequest_SubsEntry_DoNotUse::ConnectRequest_SubsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ConnectRequest_SubsEntry_DoNotUse::ConnectRequest_SubsEntry_DoNotUse() : SuperType() {}
              ConnectRequest_SubsEntry_DoNotUse::ConnectRequest_SubsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ConnectRequest_SubsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ConnectRequest_SubsEntry_DoNotUse(arena);
              }
              constexpr auto ConnectRequest_SubsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectRequest_SubsEntry_DoNotUse),
                                                          alignof(ConnectRequest_SubsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ConnectRequest_SubsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ConnectRequest_SubsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ConnectRequest_SubsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ConnectRequest_SubsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ConnectRequest_SubsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ConnectRequest_SubsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ConnectRequest_SubsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ConnectRequest_SubsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_protocol_2fclient_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ConnectRequest_SubsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 68, 2> ConnectRequest_SubsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectRequest_SubsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectRequest_SubsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.SubscribeRequest value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest_SubsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest_SubsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest_SubsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .centrifugal.centrifuge.protocol.SubscribeRequest value = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest_SubsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeRequest>()},
  }}, {{
    "\70\3\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.ConnectRequest.SubsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ConnectRequest_HeadersEntry_DoNotUse::ConnectRequest_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ConnectRequest_HeadersEntry_DoNotUse::ConnectRequest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ConnectRequest_HeadersEntry_DoNotUse::ConnectRequest_HeadersEntry_DoNotUse() : SuperType() {}
              ConnectRequest_HeadersEntry_DoNotUse::ConnectRequest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ConnectRequest_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ConnectRequest_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto ConnectRequest_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectRequest_HeadersEntry_DoNotUse),
                                                          alignof(ConnectRequest_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ConnectRequest_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ConnectRequest_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ConnectRequest_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ConnectRequest_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ConnectRequest_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ConnectRequest_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ConnectRequest_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ConnectRequest_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_protocol_2fclient_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ConnectRequest_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 76, 2> ConnectRequest_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectRequest_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectRequest_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\3\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.ConnectRequest.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ConnectRequest::_Internal {
 public:
};

ConnectRequest::ConnectRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.ConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE ConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::ConnectRequest& from_msg)
      : subs_{visibility, arena, from.subs_},
        headers_{visibility, arena, from.headers_},
        token_(arena, from.token_),
        data_(arena, from.data_),
        name_(arena, from.name_),
        version_(arena, from.version_),
        _cached_size_{0} {}

ConnectRequest::ConnectRequest(
    ::google::protobuf::Arena* arena,
    const ConnectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.ConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE ConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subs_{visibility, arena},
        headers_{visibility, arena},
        token_(arena),
        data_(arena),
        name_(arena),
        version_(arena),
        _cached_size_{0} {}

inline void ConnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConnectRequest::~ConnectRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.ConnectRequest)
  SharedDtor(*this);
}
inline void ConnectRequest::SharedDtor(MessageLite& self) {
  ConnectRequest& this_ = static_cast<ConnectRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ConnectRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConnectRequest(arena);
}
constexpr auto ConnectRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.subs_) +
          decltype(ConnectRequest::_impl_.subs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.subs_) +
          decltype(ConnectRequest::_impl_.subs_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.headers_) +
          decltype(ConnectRequest::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.headers_) +
          decltype(ConnectRequest::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConnectRequest), alignof(ConnectRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConnectRequest::PlacementNew_,
                                 sizeof(ConnectRequest),
                                 alignof(ConnectRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConnectRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConnectRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConnectRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConnectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConnectRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConnectRequest>(), &ConnectRequest::ByteSizeLong,
            &ConnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_._cached_size_),
        false,
    },
    &ConnectRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConnectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 82, 2> ConnectRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.token_)}},
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.name_)}},
    // string version = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, .centrifugal.centrifuge.protocol.SubscribeRequest> subs = 3;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.subs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string name = 4;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 5;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> headers = 6;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.headers_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ConnectRequest()._impl_.subs_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeRequest>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ConnectRequest()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\56\5\0\4\4\7\7\0"
    "centrifugal.centrifuge.protocol.ConnectRequest"
    "token"
    "subs"
    "name"
    "version"
    "headers"
  }},
};

PROTOBUF_NOINLINE void ConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.ConnectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subs_.Clear();
  _impl_.headers_.Clear();
  _impl_.token_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConnectRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConnectRequest& this_ = static_cast<const ConnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConnectRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.ConnectRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token = 1;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.token");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes data = 2;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // map<string, .centrifugal.centrifuge.protocol.SubscribeRequest> subs = 3;
          if (!this_._internal_subs().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::centrifugal::centrifuge::protocol::SubscribeRequest>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::SubscribeRequest,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_subs();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.subs");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.subs");
              }
            }
          }

          // string name = 4;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string version = 5;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.version");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> headers = 6;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectRequest.headers");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.ConnectRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConnectRequest::ByteSizeLong(const MessageLite& base) {
          const ConnectRequest& this_ = static_cast<const ConnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConnectRequest::ByteSizeLong() const {
          const ConnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.ConnectRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .centrifugal.centrifuge.protocol.SubscribeRequest> subs = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subs_size());
              for (const auto& entry : this_._internal_subs()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::SubscribeRequest,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> headers = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string token = 1;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
            // bytes data = 2;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string name = 4;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string version = 5;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectRequest*>(&to_msg);
  auto& from = static_cast<const ConnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.ConnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subs_.MergeFrom(from._impl_.subs_);
  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectRequest::InternalSwap(ConnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subs_.InternalSwap(&other->_impl_.subs_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
}

::google::protobuf::Metadata ConnectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ConnectResult_SubsEntry_DoNotUse::ConnectResult_SubsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ConnectResult_SubsEntry_DoNotUse::ConnectResult_SubsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ConnectResult_SubsEntry_DoNotUse::ConnectResult_SubsEntry_DoNotUse() : SuperType() {}
              ConnectResult_SubsEntry_DoNotUse::ConnectResult_SubsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ConnectResult_SubsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ConnectResult_SubsEntry_DoNotUse(arena);
              }
              constexpr auto ConnectResult_SubsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectResult_SubsEntry_DoNotUse),
                                                          alignof(ConnectResult_SubsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ConnectResult_SubsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ConnectResult_SubsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ConnectResult_SubsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ConnectResult_SubsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ConnectResult_SubsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ConnectResult_SubsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ConnectResult_SubsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ConnectResult_SubsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_protocol_2fclient_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ConnectResult_SubsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 67, 2> ConnectResult_SubsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectResult_SubsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectResult_SubsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.SubscribeResult value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConnectResult_SubsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult_SubsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectResult_SubsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .centrifugal.centrifuge.protocol.SubscribeResult value = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectResult_SubsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeResult>()},
  }}, {{
    "\67\3\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.ConnectResult.SubsEntry"
    "key"
  }},
};

// ===================================================================

class ConnectResult::_Internal {
 public:
};

ConnectResult::ConnectResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.ConnectResult)
}
inline PROTOBUF_NDEBUG_INLINE ConnectResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::ConnectResult& from_msg)
      : subs_{visibility, arena, from.subs_},
        client_(arena, from.client_),
        version_(arena, from.version_),
        data_(arena, from.data_),
        session_(arena, from.session_),
        node_(arena, from.node_),
        _cached_size_{0} {}

ConnectResult::ConnectResult(
    ::google::protobuf::Arena* arena,
    const ConnectResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConnectResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ttl_),
           offsetof(Impl_, ping_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::ping_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.ConnectResult)
}
inline PROTOBUF_NDEBUG_INLINE ConnectResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subs_{visibility, arena},
        client_(arena),
        version_(arena),
        data_(arena),
        session_(arena),
        node_(arena),
        _cached_size_{0} {}

inline void ConnectResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           0,
           offsetof(Impl_, ping_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::ping_));
}
ConnectResult::~ConnectResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.ConnectResult)
  SharedDtor(*this);
}
inline void ConnectResult::SharedDtor(MessageLite& self) {
  ConnectResult& this_ = static_cast<ConnectResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.session_.Destroy();
  this_._impl_.node_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ConnectResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConnectResult(arena);
}
constexpr auto ConnectResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.subs_) +
          decltype(ConnectResult::_impl_.subs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.subs_) +
          decltype(ConnectResult::_impl_.subs_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConnectResult), alignof(ConnectResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConnectResult::PlacementNew_,
                                 sizeof(ConnectResult),
                                 alignof(ConnectResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConnectResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConnectResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConnectResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConnectResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConnectResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConnectResult>(), &ConnectResult::ByteSizeLong,
            &ConnectResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_._cached_size_),
        false,
    },
    &ConnectResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConnectResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 90, 2> ConnectResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ConnectResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string client = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.client_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.version_)}},
    // bool expires = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ConnectResult, _impl_.expires_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.expires_)}},
    // uint32 ttl = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectResult, _impl_.ttl_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.ttl_)}},
    // bytes data = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 ping = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectResult, _impl_.ping_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.ping_)}},
    // bool pong = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ConnectResult, _impl_.pong_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.pong_)}},
    // string session = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.session_)}},
    // string node = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.node_)}},
    // int64 time = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConnectResult, _impl_.time_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string client = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool expires = 3;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 ttl = 4;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes data = 5;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, .centrifugal.centrifuge.protocol.SubscribeResult> subs = 6;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.subs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint32 ping = 7;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.ping_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool pong = 8;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.pong_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string session = 9;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string node = 10;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 time = 11;
    {PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ConnectResult()._impl_.subs_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeResult>()},
  }}, {{
    "\55\6\7\0\0\0\4\0\0\7\4\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.ConnectResult"
    "client"
    "version"
    "subs"
    "session"
    "node"
  }},
};

PROTOBUF_NOINLINE void ConnectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.ConnectResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subs_.Clear();
  _impl_.client_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.session_.ClearToEmpty();
  _impl_.node_.ClearToEmpty();
  ::memset(&_impl_.ttl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ping_) -
      reinterpret_cast<char*>(&_impl_.ttl_)) + sizeof(_impl_.ping_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConnectResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConnectResult& this_ = static_cast<const ConnectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConnectResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConnectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.ConnectResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client = 1;
          if (!this_._internal_client().empty()) {
            const std::string& _s = this_._internal_client();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectResult.client");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string version = 2;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectResult.version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool expires = 3;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_expires(), target);
          }

          // uint32 ttl = 4;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_ttl(), target);
          }

          // bytes data = 5;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // map<string, .centrifugal.centrifuge.protocol.SubscribeResult> subs = 6;
          if (!this_._internal_subs().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::centrifugal::centrifuge::protocol::SubscribeResult>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::SubscribeResult,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_subs();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectResult.subs");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectResult.subs");
              }
            }
          }

          // uint32 ping = 7;
          if (this_._internal_ping() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_ping(), target);
          }

          // bool pong = 8;
          if (this_._internal_pong() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_pong(), target);
          }

          // string session = 9;
          if (!this_._internal_session().empty()) {
            const std::string& _s = this_._internal_session();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectResult.session");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string node = 10;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.ConnectResult.node");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // int64 time = 11;
          if (this_._internal_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_time(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.ConnectResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConnectResult::ByteSizeLong(const MessageLite& base) {
          const ConnectResult& this_ = static_cast<const ConnectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConnectResult::ByteSizeLong() const {
          const ConnectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.ConnectResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .centrifugal.centrifuge.protocol.SubscribeResult> subs = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subs_size());
              for (const auto& entry : this_._internal_subs()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::SubscribeResult,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string client = 1;
            if (!this_._internal_client().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client());
            }
            // string version = 2;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // bytes data = 5;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string session = 9;
            if (!this_._internal_session().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session());
            }
            // string node = 10;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // uint32 ttl = 4;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ttl());
            }
            // bool expires = 3;
            if (this_._internal_expires() != 0) {
              total_size += 2;
            }
            // bool pong = 8;
            if (this_._internal_pong() != 0) {
              total_size += 2;
            }
            // int64 time = 11;
            if (this_._internal_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_time());
            }
            // uint32 ping = 7;
            if (this_._internal_ping() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ping());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConnectResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectResult*>(&to_msg);
  auto& from = static_cast<const ConnectResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.ConnectResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subs_.MergeFrom(from._impl_.subs_);
  if (!from._internal_client().empty()) {
    _this->_internal_set_client(from._internal_client());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_session().empty()) {
    _this->_internal_set_session(from._internal_session());
  }
  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_pong() != 0) {
    _this->_impl_.pong_ = from._impl_.pong_;
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  if (from._internal_ping() != 0) {
    _this->_impl_.ping_ = from._impl_.ping_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectResult::CopyFrom(const ConnectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.ConnectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectResult::InternalSwap(ConnectResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subs_.InternalSwap(&other->_impl_.subs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_, &other->_impl_.client_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_, &other->_impl_.session_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.ping_)
      + sizeof(ConnectResult::_impl_.ping_)
      - PROTOBUF_FIELD_OFFSET(ConnectResult, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata ConnectResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RefreshRequest::_Internal {
 public:
};

RefreshRequest::RefreshRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.RefreshRequest)
}
inline PROTOBUF_NDEBUG_INLINE RefreshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::RefreshRequest& from_msg)
      : token_(arena, from.token_),
        _cached_size_{0} {}

RefreshRequest::RefreshRequest(
    ::google::protobuf::Arena* arena,
    const RefreshRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RefreshRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.RefreshRequest)
}
inline PROTOBUF_NDEBUG_INLINE RefreshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        _cached_size_{0} {}

inline void RefreshRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RefreshRequest::~RefreshRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.RefreshRequest)
  SharedDtor(*this);
}
inline void RefreshRequest::SharedDtor(MessageLite& self) {
  RefreshRequest& this_ = static_cast<RefreshRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RefreshRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RefreshRequest(arena);
}
constexpr auto RefreshRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RefreshRequest),
                                            alignof(RefreshRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RefreshRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RefreshRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RefreshRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RefreshRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RefreshRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RefreshRequest>(), &RefreshRequest::ByteSizeLong,
            &RefreshRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RefreshRequest, _impl_._cached_size_),
        false,
    },
    &RefreshRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RefreshRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> RefreshRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RefreshRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RefreshRequest, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1;
    {PROTOBUF_FIELD_OFFSET(RefreshRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\5\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.RefreshRequest"
    "token"
  }},
};

PROTOBUF_NOINLINE void RefreshRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.RefreshRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RefreshRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RefreshRequest& this_ = static_cast<const RefreshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RefreshRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RefreshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.RefreshRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token = 1;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.RefreshRequest.token");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.RefreshRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RefreshRequest::ByteSizeLong(const MessageLite& base) {
          const RefreshRequest& this_ = static_cast<const RefreshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RefreshRequest::ByteSizeLong() const {
          const RefreshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.RefreshRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string token = 1;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RefreshRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RefreshRequest*>(&to_msg);
  auto& from = static_cast<const RefreshRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.RefreshRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshRequest::CopyFrom(const RefreshRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.RefreshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RefreshRequest::InternalSwap(RefreshRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata RefreshRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RefreshResult::_Internal {
 public:
};

RefreshResult::RefreshResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.RefreshResult)
}
inline PROTOBUF_NDEBUG_INLINE RefreshResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::RefreshResult& from_msg)
      : client_(arena, from.client_),
        version_(arena, from.version_),
        _cached_size_{0} {}

RefreshResult::RefreshResult(
    ::google::protobuf::Arena* arena,
    const RefreshResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RefreshResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expires_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, expires_),
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, expires_) +
               sizeof(Impl_::ttl_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.RefreshResult)
}
inline PROTOBUF_NDEBUG_INLINE RefreshResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_(arena),
        version_(arena),
        _cached_size_{0} {}

inline void RefreshResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expires_),
           0,
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, expires_) +
               sizeof(Impl_::ttl_));
}
RefreshResult::~RefreshResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.RefreshResult)
  SharedDtor(*this);
}
inline void RefreshResult::SharedDtor(MessageLite& self) {
  RefreshResult& this_ = static_cast<RefreshResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RefreshResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RefreshResult(arena);
}
constexpr auto RefreshResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RefreshResult),
                                            alignof(RefreshResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RefreshResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RefreshResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RefreshResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RefreshResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RefreshResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RefreshResult>(), &RefreshResult::ByteSizeLong,
            &RefreshResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_._cached_size_),
        false,
    },
    &RefreshResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RefreshResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 67, 2> RefreshResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RefreshResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 ttl = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RefreshResult, _impl_.ttl_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.ttl_)}},
    // string client = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.client_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.version_)}},
    // bool expires = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RefreshResult, _impl_.expires_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.expires_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client = 1;
    {PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool expires = 3;
    {PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 ttl = 4;
    {PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\55\6\7\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.RefreshResult"
    "client"
    "version"
  }},
};

PROTOBUF_NOINLINE void RefreshResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.RefreshResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  ::memset(&_impl_.expires_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ttl_) -
      reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.ttl_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RefreshResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RefreshResult& this_ = static_cast<const RefreshResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RefreshResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RefreshResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.RefreshResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client = 1;
          if (!this_._internal_client().empty()) {
            const std::string& _s = this_._internal_client();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.RefreshResult.client");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string version = 2;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.RefreshResult.version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool expires = 3;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_expires(), target);
          }

          // uint32 ttl = 4;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_ttl(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.RefreshResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RefreshResult::ByteSizeLong(const MessageLite& base) {
          const RefreshResult& this_ = static_cast<const RefreshResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RefreshResult::ByteSizeLong() const {
          const RefreshResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.RefreshResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client = 1;
            if (!this_._internal_client().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client());
            }
            // string version = 2;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // bool expires = 3;
            if (this_._internal_expires() != 0) {
              total_size += 2;
            }
            // uint32 ttl = 4;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ttl());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RefreshResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RefreshResult*>(&to_msg);
  auto& from = static_cast<const RefreshResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.RefreshResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client().empty()) {
    _this->_internal_set_client(from._internal_client());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshResult::CopyFrom(const RefreshResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.RefreshResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RefreshResult::InternalSwap(RefreshResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_, &other->_impl_.client_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.ttl_)
      + sizeof(RefreshResult::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(RefreshResult, _impl_.expires_)>(
          reinterpret_cast<char*>(&_impl_.expires_),
          reinterpret_cast<char*>(&other->_impl_.expires_));
}

::google::protobuf::Metadata RefreshResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequest::_Internal {
 public:
};

SubscribeRequest::SubscribeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.SubscribeRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::SubscribeRequest& from_msg)
      : channel_(arena, from.channel_),
        token_(arena, from.token_),
        epoch_(arena, from.epoch_),
        data_(arena, from.data_),
        delta_(arena, from.delta_),
        _cached_size_{0} {}

SubscribeRequest::SubscribeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, join_leave_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::join_leave_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.SubscribeRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_(arena),
        token_(arena),
        epoch_(arena),
        data_(arena),
        delta_(arena),
        _cached_size_{0} {}

inline void SubscribeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, join_leave_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::join_leave_));
}
SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.SubscribeRequest)
  SharedDtor(*this);
}
inline void SubscribeRequest::SharedDtor(MessageLite& self) {
  SubscribeRequest& this_ = static_cast<SubscribeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  this_._impl_.token_.Destroy();
  this_._impl_.epoch_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.delta_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeRequest(arena);
}
constexpr auto SubscribeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest),
                                            alignof(SubscribeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeRequest>(), &SubscribeRequest::ByteSizeLong,
            &SubscribeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 87, 2> SubscribeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.channel_)}},
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.token_)}},
    // bool recover = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequest, _impl_.recover_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.recover_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string epoch = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.epoch_)}},
    // uint64 offset = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeRequest, _impl_.offset_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.offset_)}},
    // bytes data = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.data_)}},
    // bool positioned = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequest, _impl_.positioned_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.positioned_)}},
    // bool recoverable = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequest, _impl_.recoverable_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.recoverable_)}},
    // bool join_leave = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequest, _impl_.join_leave_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.join_leave_)}},
    // string delta = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.delta_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool recover = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.recover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string epoch = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 offset = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes data = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool positioned = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.positioned_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool recoverable = 10;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.recoverable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool join_leave = 11;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.join_leave_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string delta = 12;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.delta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\7\5\0\5\0\0\0\0\0\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.SubscribeRequest"
    "channel"
    "token"
    "epoch"
    "delta"
  }},
};

PROTOBUF_NOINLINE void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.SubscribeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _impl_.epoch_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.delta_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.join_leave_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.join_leave_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeRequest& this_ = static_cast<const SubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.SubscribeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubscribeRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string token = 2;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubscribeRequest.token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool recover = 3;
          if (this_._internal_recover() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_recover(), target);
          }

          // string epoch = 6;
          if (!this_._internal_epoch().empty()) {
            const std::string& _s = this_._internal_epoch();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubscribeRequest.epoch");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // uint64 offset = 7;
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_offset(), target);
          }

          // bytes data = 8;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          // bool positioned = 9;
          if (this_._internal_positioned() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_positioned(), target);
          }

          // bool recoverable = 10;
          if (this_._internal_recoverable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_recoverable(), target);
          }

          // bool join_leave = 11;
          if (this_._internal_join_leave() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_join_leave(), target);
          }

          // string delta = 12;
          if (!this_._internal_delta().empty()) {
            const std::string& _s = this_._internal_delta();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubscribeRequest.delta");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.SubscribeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeRequest& this_ = static_cast<const SubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeRequest::ByteSizeLong() const {
          const SubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.SubscribeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
            // string token = 2;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
            // string epoch = 6;
            if (!this_._internal_epoch().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_epoch());
            }
            // bytes data = 8;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string delta = 12;
            if (!this_._internal_delta().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delta());
            }
            // uint64 offset = 7;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
            // bool recover = 3;
            if (this_._internal_recover() != 0) {
              total_size += 2;
            }
            // bool positioned = 9;
            if (this_._internal_positioned() != 0) {
              total_size += 2;
            }
            // bool recoverable = 10;
            if (this_._internal_recoverable() != 0) {
              total_size += 2;
            }
            // bool join_leave = 11;
            if (this_._internal_join_leave() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.SubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_epoch().empty()) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_delta().empty()) {
    _this->_internal_set_delta(from._internal_delta());
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_recover() != 0) {
    _this->_impl_.recover_ = from._impl_.recover_;
  }
  if (from._internal_positioned() != 0) {
    _this->_impl_.positioned_ = from._impl_.positioned_;
  }
  if (from._internal_recoverable() != 0) {
    _this->_impl_.recoverable_ = from._impl_.recoverable_;
  }
  if (from._internal_join_leave() != 0) {
    _this->_impl_.join_leave_ = from._impl_.join_leave_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequest::InternalSwap(SubscribeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.epoch_, &other->_impl_.epoch_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delta_, &other->_impl_.delta_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.join_leave_)
      + sizeof(SubscribeRequest::_impl_.join_leave_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeResult::_Internal {
 public:
};

SubscribeResult::SubscribeResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.SubscribeResult)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::SubscribeResult& from_msg)
      : publications_{visibility, arena, from.publications_},
        epoch_(arena, from.epoch_),
        data_(arena, from.data_),
        _cached_size_{0} {}

SubscribeResult::SubscribeResult(
    ::google::protobuf::Arena* arena,
    const SubscribeResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ttl_),
           offsetof(Impl_, delta_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::delta_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.SubscribeResult)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : publications_{visibility, arena},
        epoch_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void SubscribeResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           0,
           offsetof(Impl_, delta_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::delta_));
}
SubscribeResult::~SubscribeResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.SubscribeResult)
  SharedDtor(*this);
}
inline void SubscribeResult::SharedDtor(MessageLite& self) {
  SubscribeResult& this_ = static_cast<SubscribeResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.epoch_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeResult(arena);
}
constexpr auto SubscribeResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.publications_) +
          decltype(SubscribeResult::_impl_.publications_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeResult), alignof(SubscribeResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeResult::PlacementNew_,
                                 sizeof(SubscribeResult),
                                 alignof(SubscribeResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeResult>(), &SubscribeResult::ByteSizeLong,
            &SubscribeResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_._cached_size_),
        false,
    },
    &SubscribeResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 69, 2> SubscribeResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959128,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubscribeResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool expires = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeResult, _impl_.expires_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.expires_)}},
    // uint32 ttl = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeResult, _impl_.ttl_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.ttl_)}},
    // bool recoverable = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeResult, _impl_.recoverable_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.recoverable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string epoch = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.epoch_)}},
    // repeated .centrifugal.centrifuge.protocol.Publication publications = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.publications_)}},
    // bool recovered = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeResult, _impl_.recovered_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.recovered_)}},
    // uint64 offset = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeResult, _impl_.offset_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.offset_)}},
    // bool positioned = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeResult, _impl_.positioned_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.positioned_)}},
    // bytes data = 11;
    {::_pbi::TcParser::FastBS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.data_)}},
    // bool was_recovering = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeResult, _impl_.was_recovering_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.was_recovering_)}},
    // bool delta = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeResult, _impl_.delta_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.delta_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool expires = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 ttl = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool recoverable = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.recoverable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string epoch = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .centrifugal.centrifuge.protocol.Publication publications = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.publications_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool recovered = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.recovered_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 offset = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool positioned = 10;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.positioned_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes data = 11;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool was_recovering = 12;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.was_recovering_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool delta = 13;
    {PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.delta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Publication>()},
  }}, {{
    "\57\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.SubscribeResult"
    "epoch"
  }},
};

PROTOBUF_NOINLINE void SubscribeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.SubscribeResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publications_.Clear();
  _impl_.epoch_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.ttl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.delta_) -
      reinterpret_cast<char*>(&_impl_.ttl_)) + sizeof(_impl_.delta_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeResult& this_ = static_cast<const SubscribeResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.SubscribeResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool expires = 1;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_expires(), target);
          }

          // uint32 ttl = 2;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_ttl(), target);
          }

          // bool recoverable = 3;
          if (this_._internal_recoverable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_recoverable(), target);
          }

          // string epoch = 6;
          if (!this_._internal_epoch().empty()) {
            const std::string& _s = this_._internal_epoch();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubscribeResult.epoch");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated .centrifugal.centrifuge.protocol.Publication publications = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_publications_size());
               i < n; i++) {
            const auto& repfield = this_._internal_publications().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool recovered = 8;
          if (this_._internal_recovered() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_recovered(), target);
          }

          // uint64 offset = 9;
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                9, this_._internal_offset(), target);
          }

          // bool positioned = 10;
          if (this_._internal_positioned() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_positioned(), target);
          }

          // bytes data = 11;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(11, _s, target);
          }

          // bool was_recovering = 12;
          if (this_._internal_was_recovering() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_was_recovering(), target);
          }

          // bool delta = 13;
          if (this_._internal_delta() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_delta(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.SubscribeResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeResult::ByteSizeLong(const MessageLite& base) {
          const SubscribeResult& this_ = static_cast<const SubscribeResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeResult::ByteSizeLong() const {
          const SubscribeResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.SubscribeResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .centrifugal.centrifuge.protocol.Publication publications = 7;
            {
              total_size += 1UL * this_._internal_publications_size();
              for (const auto& msg : this_._internal_publications()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string epoch = 6;
            if (!this_._internal_epoch().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_epoch());
            }
            // bytes data = 11;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // uint32 ttl = 2;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ttl());
            }
            // bool expires = 1;
            if (this_._internal_expires() != 0) {
              total_size += 2;
            }
            // bool recoverable = 3;
            if (this_._internal_recoverable() != 0) {
              total_size += 2;
            }
            // bool recovered = 8;
            if (this_._internal_recovered() != 0) {
              total_size += 2;
            }
            // bool positioned = 10;
            if (this_._internal_positioned() != 0) {
              total_size += 2;
            }
            // uint64 offset = 9;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
            // bool was_recovering = 12;
            if (this_._internal_was_recovering() != 0) {
              total_size += 2;
            }
            // bool delta = 13;
            if (this_._internal_delta() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeResult*>(&to_msg);
  auto& from = static_cast<const SubscribeResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.SubscribeResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_publications()->MergeFrom(
      from._internal_publications());
  if (!from._internal_epoch().empty()) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_recoverable() != 0) {
    _this->_impl_.recoverable_ = from._impl_.recoverable_;
  }
  if (from._internal_recovered() != 0) {
    _this->_impl_.recovered_ = from._impl_.recovered_;
  }
  if (from._internal_positioned() != 0) {
    _this->_impl_.positioned_ = from._impl_.positioned_;
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_was_recovering() != 0) {
    _this->_impl_.was_recovering_ = from._impl_.was_recovering_;
  }
  if (from._internal_delta() != 0) {
    _this->_impl_.delta_ = from._impl_.delta_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeResult::CopyFrom(const SubscribeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.SubscribeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeResult::InternalSwap(SubscribeResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.publications_.InternalSwap(&other->_impl_.publications_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.epoch_, &other->_impl_.epoch_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.delta_)
      + sizeof(SubscribeResult::_impl_.delta_)
      - PROTOBUF_FIELD_OFFSET(SubscribeResult, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata SubscribeResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubRefreshRequest::_Internal {
 public:
};

SubRefreshRequest::SubRefreshRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.SubRefreshRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubRefreshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::SubRefreshRequest& from_msg)
      : channel_(arena, from.channel_),
        token_(arena, from.token_),
        _cached_size_{0} {}

SubRefreshRequest::SubRefreshRequest(
    ::google::protobuf::Arena* arena,
    const SubRefreshRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubRefreshRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.SubRefreshRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubRefreshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_(arena),
        token_(arena),
        _cached_size_{0} {}

inline void SubRefreshRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubRefreshRequest::~SubRefreshRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.SubRefreshRequest)
  SharedDtor(*this);
}
inline void SubRefreshRequest::SharedDtor(MessageLite& self) {
  SubRefreshRequest& this_ = static_cast<SubRefreshRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  this_._impl_.token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubRefreshRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubRefreshRequest(arena);
}
constexpr auto SubRefreshRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubRefreshRequest),
                                            alignof(SubRefreshRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubRefreshRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubRefreshRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubRefreshRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubRefreshRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubRefreshRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubRefreshRequest>(), &SubRefreshRequest::ByteSizeLong,
            &SubRefreshRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubRefreshRequest, _impl_._cached_size_),
        false,
    },
    &SubRefreshRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubRefreshRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> SubRefreshRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubRefreshRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubRefreshRequest, _impl_.token_)}},
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubRefreshRequest, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(SubRefreshRequest, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(SubRefreshRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\7\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.SubRefreshRequest"
    "channel"
    "token"
  }},
};

PROTOBUF_NOINLINE void SubRefreshRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.SubRefreshRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubRefreshRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubRefreshRequest& this_ = static_cast<const SubRefreshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubRefreshRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubRefreshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.SubRefreshRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubRefreshRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string token = 2;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.SubRefreshRequest.token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.SubRefreshRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubRefreshRequest::ByteSizeLong(const MessageLite& base) {
          const SubRefreshRequest& this_ = static_cast<const SubRefreshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubRefreshRequest::ByteSizeLong() const {
          const SubRefreshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.SubRefreshRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
            // string token = 2;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubRefreshRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubRefreshRequest*>(&to_msg);
  auto& from = static_cast<const SubRefreshRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.SubRefreshRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubRefreshRequest::CopyFrom(const SubRefreshRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.SubRefreshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubRefreshRequest::InternalSwap(SubRefreshRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata SubRefreshRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubRefreshResult::_Internal {
 public:
};

SubRefreshResult::SubRefreshResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.SubRefreshResult)
}
SubRefreshResult::SubRefreshResult(
    ::google::protobuf::Arena* arena, const SubRefreshResult& from)
    : SubRefreshResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SubRefreshResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SubRefreshResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expires_),
           0,
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, expires_) +
               sizeof(Impl_::ttl_));
}
SubRefreshResult::~SubRefreshResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.SubRefreshResult)
  SharedDtor(*this);
}
inline void SubRefreshResult::SharedDtor(MessageLite& self) {
  SubRefreshResult& this_ = static_cast<SubRefreshResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubRefreshResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubRefreshResult(arena);
}
constexpr auto SubRefreshResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubRefreshResult),
                                            alignof(SubRefreshResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubRefreshResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubRefreshResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubRefreshResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubRefreshResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubRefreshResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubRefreshResult>(), &SubRefreshResult::ByteSizeLong,
            &SubRefreshResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_._cached_size_),
        false,
    },
    &SubRefreshResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubRefreshResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SubRefreshResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SubRefreshResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 ttl = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubRefreshResult, _impl_.ttl_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_.ttl_)}},
    // bool expires = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubRefreshResult, _impl_.expires_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_.expires_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool expires = 1;
    {PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 ttl = 2;
    {PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SubRefreshResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.SubRefreshResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.expires_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ttl_) -
      reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.ttl_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubRefreshResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubRefreshResult& this_ = static_cast<const SubRefreshResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubRefreshResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubRefreshResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.SubRefreshResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool expires = 1;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_expires(), target);
          }

          // uint32 ttl = 2;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_ttl(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.SubRefreshResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubRefreshResult::ByteSizeLong(const MessageLite& base) {
          const SubRefreshResult& this_ = static_cast<const SubRefreshResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubRefreshResult::ByteSizeLong() const {
          const SubRefreshResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.SubRefreshResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool expires = 1;
            if (this_._internal_expires() != 0) {
              total_size += 2;
            }
            // uint32 ttl = 2;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ttl());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubRefreshResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubRefreshResult*>(&to_msg);
  auto& from = static_cast<const SubRefreshResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.SubRefreshResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubRefreshResult::CopyFrom(const SubRefreshResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.SubRefreshResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubRefreshResult::InternalSwap(SubRefreshResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_.ttl_)
      + sizeof(SubRefreshResult::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(SubRefreshResult, _impl_.expires_)>(
          reinterpret_cast<char*>(&_impl_.expires_),
          reinterpret_cast<char*>(&other->_impl_.expires_));
}

::google::protobuf::Metadata SubRefreshResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnsubscribeRequest::_Internal {
 public:
};

UnsubscribeRequest::UnsubscribeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.UnsubscribeRequest)
}
inline PROTOBUF_NDEBUG_INLINE UnsubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::UnsubscribeRequest& from_msg)
      : channel_(arena, from.channel_),
        _cached_size_{0} {}

UnsubscribeRequest::UnsubscribeRequest(
    ::google::protobuf::Arena* arena,
    const UnsubscribeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnsubscribeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.UnsubscribeRequest)
}
inline PROTOBUF_NDEBUG_INLINE UnsubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_(arena),
        _cached_size_{0} {}

inline void UnsubscribeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.UnsubscribeRequest)
  SharedDtor(*this);
}
inline void UnsubscribeRequest::SharedDtor(MessageLite& self) {
  UnsubscribeRequest& this_ = static_cast<UnsubscribeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UnsubscribeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnsubscribeRequest(arena);
}
constexpr auto UnsubscribeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnsubscribeRequest),
                                            alignof(UnsubscribeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnsubscribeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnsubscribeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnsubscribeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnsubscribeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnsubscribeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnsubscribeRequest>(), &UnsubscribeRequest::ByteSizeLong,
            &UnsubscribeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_._cached_size_),
        false,
    },
    &UnsubscribeRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnsubscribeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 66, 2> UnsubscribeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::UnsubscribeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\7\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.UnsubscribeRequest"
    "channel"
  }},
};

PROTOBUF_NOINLINE void UnsubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.UnsubscribeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnsubscribeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnsubscribeRequest& this_ = static_cast<const UnsubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnsubscribeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnsubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.UnsubscribeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.UnsubscribeRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.UnsubscribeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnsubscribeRequest::ByteSizeLong(const MessageLite& base) {
          const UnsubscribeRequest& this_ = static_cast<const UnsubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnsubscribeRequest::ByteSizeLong() const {
          const UnsubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.UnsubscribeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnsubscribeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnsubscribeRequest*>(&to_msg);
  auto& from = static_cast<const UnsubscribeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.UnsubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnsubscribeRequest::CopyFrom(const UnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.UnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnsubscribeRequest::InternalSwap(UnsubscribeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnsubscribeResult::_Internal {
 public:
};

UnsubscribeResult::UnsubscribeResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.UnsubscribeResult)
}
UnsubscribeResult::UnsubscribeResult(
    ::google::protobuf::Arena* arena,
    const UnsubscribeResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnsubscribeResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.UnsubscribeResult)
}

inline void* UnsubscribeResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnsubscribeResult(arena);
}
constexpr auto UnsubscribeResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UnsubscribeResult),
                                            alignof(UnsubscribeResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnsubscribeResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnsubscribeResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnsubscribeResult::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<UnsubscribeResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnsubscribeResult::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<UnsubscribeResult>(), &UnsubscribeResult::ByteSizeLong,
            &UnsubscribeResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnsubscribeResult, _impl_._cached_size_),
        false,
    },
    &UnsubscribeResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnsubscribeResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> UnsubscribeResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::UnsubscribeResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata UnsubscribeResult::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PublishRequest::_Internal {
 public:
};

PublishRequest::PublishRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PublishRequest)
}
inline PROTOBUF_NDEBUG_INLINE PublishRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::PublishRequest& from_msg)
      : channel_(arena, from.channel_),
        data_(arena, from.data_),
        _cached_size_{0} {}

PublishRequest::PublishRequest(
    ::google::protobuf::Arena* arena,
    const PublishRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PublishRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PublishRequest)
}
inline PROTOBUF_NDEBUG_INLINE PublishRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void PublishRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PublishRequest::~PublishRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.PublishRequest)
  SharedDtor(*this);
}
inline void PublishRequest::SharedDtor(MessageLite& self) {
  PublishRequest& this_ = static_cast<PublishRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PublishRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PublishRequest(arena);
}
constexpr auto PublishRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PublishRequest),
                                            alignof(PublishRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PublishRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PublishRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PublishRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PublishRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PublishRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PublishRequest>(), &PublishRequest::ByteSizeLong,
            &PublishRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_._cached_size_),
        false,
    },
    &PublishRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PublishRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> PublishRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PublishRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.data_)}},
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(PublishRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\7\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.PublishRequest"
    "channel"
  }},
};

PROTOBUF_NOINLINE void PublishRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.PublishRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PublishRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PublishRequest& this_ = static_cast<const PublishRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PublishRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PublishRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.PublishRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.PublishRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes data = 2;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.PublishRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PublishRequest::ByteSizeLong(const MessageLite& base) {
          const PublishRequest& this_ = static_cast<const PublishRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PublishRequest::ByteSizeLong() const {
          const PublishRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.PublishRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
            // bytes data = 2;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PublishRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PublishRequest*>(&to_msg);
  auto& from = static_cast<const PublishRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.PublishRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PublishRequest::CopyFrom(const PublishRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.PublishRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PublishRequest::InternalSwap(PublishRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata PublishRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PublishResult::_Internal {
 public:
};

PublishResult::PublishResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PublishResult)
}
PublishResult::PublishResult(
    ::google::protobuf::Arena* arena,
    const PublishResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PublishResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PublishResult)
}

inline void* PublishResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PublishResult(arena);
}
constexpr auto PublishResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PublishResult),
                                            alignof(PublishResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PublishResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PublishResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PublishResult::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PublishResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PublishResult::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PublishResult>(), &PublishResult::ByteSizeLong,
            &PublishResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PublishResult, _impl_._cached_size_),
        false,
    },
    &PublishResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PublishResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PublishResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PublishResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PublishResult::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PresenceRequest::_Internal {
 public:
};

PresenceRequest::PresenceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PresenceRequest)
}
inline PROTOBUF_NDEBUG_INLINE PresenceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::PresenceRequest& from_msg)
      : channel_(arena, from.channel_),
        _cached_size_{0} {}

PresenceRequest::PresenceRequest(
    ::google::protobuf::Arena* arena,
    const PresenceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PresenceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PresenceRequest)
}
inline PROTOBUF_NDEBUG_INLINE PresenceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_(arena),
        _cached_size_{0} {}

inline void PresenceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PresenceRequest::~PresenceRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.PresenceRequest)
  SharedDtor(*this);
}
inline void PresenceRequest::SharedDtor(MessageLite& self) {
  PresenceRequest& this_ = static_cast<PresenceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PresenceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PresenceRequest(arena);
}
constexpr auto PresenceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PresenceRequest),
                                            alignof(PresenceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PresenceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PresenceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PresenceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PresenceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PresenceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PresenceRequest>(), &PresenceRequest::ByteSizeLong,
            &PresenceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PresenceRequest, _impl_._cached_size_),
        false,
    },
    &PresenceRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PresenceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 63, 2> PresenceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PresenceRequest, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(PresenceRequest, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\7\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.PresenceRequest"
    "channel"
  }},
};

PROTOBUF_NOINLINE void PresenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.PresenceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PresenceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PresenceRequest& this_ = static_cast<const PresenceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PresenceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PresenceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.PresenceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.PresenceRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.PresenceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PresenceRequest::ByteSizeLong(const MessageLite& base) {
          const PresenceRequest& this_ = static_cast<const PresenceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PresenceRequest::ByteSizeLong() const {
          const PresenceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.PresenceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PresenceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PresenceRequest*>(&to_msg);
  auto& from = static_cast<const PresenceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.PresenceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PresenceRequest::CopyFrom(const PresenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.PresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PresenceRequest::InternalSwap(PresenceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
}

::google::protobuf::Metadata PresenceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PresenceResult_PresenceEntry_DoNotUse::PresenceResult_PresenceEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PresenceResult_PresenceEntry_DoNotUse::PresenceResult_PresenceEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PresenceResult_PresenceEntry_DoNotUse::PresenceResult_PresenceEntry_DoNotUse() : SuperType() {}
              PresenceResult_PresenceEntry_DoNotUse::PresenceResult_PresenceEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PresenceResult_PresenceEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PresenceResult_PresenceEntry_DoNotUse(arena);
              }
              constexpr auto PresenceResult_PresenceEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PresenceResult_PresenceEntry_DoNotUse),
                                                          alignof(PresenceResult_PresenceEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PresenceResult_PresenceEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PresenceResult_PresenceEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PresenceResult_PresenceEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PresenceResult_PresenceEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PresenceResult_PresenceEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PresenceResult_PresenceEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PresenceResult_PresenceEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PresenceResult_PresenceEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_protocol_2fclient_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PresenceResult_PresenceEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 72, 2> PresenceResult_PresenceEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PresenceResult_PresenceEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceResult_PresenceEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.ClientInfo value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PresenceResult_PresenceEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PresenceResult_PresenceEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PresenceResult_PresenceEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .centrifugal.centrifuge.protocol.ClientInfo value = 2;
    {PROTOBUF_FIELD_OFFSET(PresenceResult_PresenceEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ClientInfo>()},
  }}, {{
    "\74\3\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.PresenceResult.PresenceEntry"
    "key"
  }},
};

// ===================================================================

class PresenceResult::_Internal {
 public:
};

PresenceResult::PresenceResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PresenceResult)
}
inline PROTOBUF_NDEBUG_INLINE PresenceResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::PresenceResult& from_msg)
      : presence_{visibility, arena, from.presence_},
        _cached_size_{0} {}

PresenceResult::PresenceResult(
    ::google::protobuf::Arena* arena,
    const PresenceResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PresenceResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PresenceResult)
}
inline PROTOBUF_NDEBUG_INLINE PresenceResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : presence_{visibility, arena},
        _cached_size_{0} {}

inline void PresenceResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PresenceResult::~PresenceResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.PresenceResult)
  SharedDtor(*this);
}
inline void PresenceResult::SharedDtor(MessageLite& self) {
  PresenceResult& this_ = static_cast<PresenceResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PresenceResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PresenceResult(arena);
}
constexpr auto PresenceResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PresenceResult, _impl_.presence_) +
          decltype(PresenceResult::_impl_.presence_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PresenceResult, _impl_.presence_) +
          decltype(PresenceResult::_impl_.presence_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PresenceResult), alignof(PresenceResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PresenceResult::PlacementNew_,
                                 sizeof(PresenceResult),
                                 alignof(PresenceResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PresenceResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PresenceResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PresenceResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PresenceResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PresenceResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PresenceResult>(), &PresenceResult::ByteSizeLong,
            &PresenceResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PresenceResult, _impl_._cached_size_),
        false,
    },
    &PresenceResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PresenceResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 2, 63, 2> PresenceResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .centrifugal.centrifuge.protocol.ClientInfo> presence = 1;
    {PROTOBUF_FIELD_OFFSET(PresenceResult, _impl_.presence_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PresenceResult()._impl_.presence_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::ClientInfo>()},
  }}, {{
    "\56\10\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.PresenceResult"
    "presence"
  }},
};

PROTOBUF_NOINLINE void PresenceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.PresenceResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.presence_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PresenceResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PresenceResult& this_ = static_cast<const PresenceResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PresenceResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PresenceResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.PresenceResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, .centrifugal.centrifuge.protocol.ClientInfo> presence = 1;
          if (!this_._internal_presence().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::centrifugal::centrifuge::protocol::ClientInfo>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::ClientInfo,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_presence();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.PresenceResult.presence");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.PresenceResult.presence");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.PresenceResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PresenceResult::ByteSizeLong(const MessageLite& base) {
          const PresenceResult& this_ = static_cast<const PresenceResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PresenceResult::ByteSizeLong() const {
          const PresenceResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.PresenceResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .centrifugal.centrifuge.protocol.ClientInfo> presence = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_presence_size());
              for (const auto& entry : this_._internal_presence()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::centrifugal::centrifuge::protocol::ClientInfo,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PresenceResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PresenceResult*>(&to_msg);
  auto& from = static_cast<const PresenceResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.PresenceResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.presence_.MergeFrom(from._impl_.presence_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PresenceResult::CopyFrom(const PresenceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.PresenceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PresenceResult::InternalSwap(PresenceResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.presence_.InternalSwap(&other->_impl_.presence_);
}

::google::protobuf::Metadata PresenceResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PresenceStatsRequest::_Internal {
 public:
};

PresenceStatsRequest::PresenceStatsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PresenceStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE PresenceStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::PresenceStatsRequest& from_msg)
      : channel_(arena, from.channel_),
        _cached_size_{0} {}

PresenceStatsRequest::PresenceStatsRequest(
    ::google::protobuf::Arena* arena,
    const PresenceStatsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PresenceStatsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PresenceStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE PresenceStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_(arena),
        _cached_size_{0} {}

inline void PresenceStatsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PresenceStatsRequest::~PresenceStatsRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.PresenceStatsRequest)
  SharedDtor(*this);
}
inline void PresenceStatsRequest::SharedDtor(MessageLite& self) {
  PresenceStatsRequest& this_ = static_cast<PresenceStatsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PresenceStatsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PresenceStatsRequest(arena);
}
constexpr auto PresenceStatsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PresenceStatsRequest),
                                            alignof(PresenceStatsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PresenceStatsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PresenceStatsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PresenceStatsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PresenceStatsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PresenceStatsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PresenceStatsRequest>(), &PresenceStatsRequest::ByteSizeLong,
            &PresenceStatsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PresenceStatsRequest, _impl_._cached_size_),
        false,
    },
    &PresenceStatsRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PresenceStatsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 68, 2> PresenceStatsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceStatsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PresenceStatsRequest, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(PresenceStatsRequest, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\7\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.PresenceStatsRequest"
    "channel"
  }},
};

PROTOBUF_NOINLINE void PresenceStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.PresenceStatsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PresenceStatsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PresenceStatsRequest& this_ = static_cast<const PresenceStatsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PresenceStatsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PresenceStatsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.PresenceStatsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.PresenceStatsRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.PresenceStatsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PresenceStatsRequest::ByteSizeLong(const MessageLite& base) {
          const PresenceStatsRequest& this_ = static_cast<const PresenceStatsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PresenceStatsRequest::ByteSizeLong() const {
          const PresenceStatsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.PresenceStatsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PresenceStatsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PresenceStatsRequest*>(&to_msg);
  auto& from = static_cast<const PresenceStatsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.PresenceStatsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PresenceStatsRequest::CopyFrom(const PresenceStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.PresenceStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PresenceStatsRequest::InternalSwap(PresenceStatsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
}

::google::protobuf::Metadata PresenceStatsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PresenceStatsResult::_Internal {
 public:
};

PresenceStatsResult::PresenceStatsResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PresenceStatsResult)
}
PresenceStatsResult::PresenceStatsResult(
    ::google::protobuf::Arena* arena, const PresenceStatsResult& from)
    : PresenceStatsResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PresenceStatsResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PresenceStatsResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_clients_),
           0,
           offsetof(Impl_, num_users_) -
               offsetof(Impl_, num_clients_) +
               sizeof(Impl_::num_users_));
}
PresenceStatsResult::~PresenceStatsResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.PresenceStatsResult)
  SharedDtor(*this);
}
inline void PresenceStatsResult::SharedDtor(MessageLite& self) {
  PresenceStatsResult& this_ = static_cast<PresenceStatsResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PresenceStatsResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PresenceStatsResult(arena);
}
constexpr auto PresenceStatsResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PresenceStatsResult),
                                            alignof(PresenceStatsResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PresenceStatsResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PresenceStatsResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PresenceStatsResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PresenceStatsResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PresenceStatsResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PresenceStatsResult>(), &PresenceStatsResult::ByteSizeLong,
            &PresenceStatsResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_._cached_size_),
        false,
    },
    &PresenceStatsResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PresenceStatsResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PresenceStatsResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PresenceStatsResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 num_users = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PresenceStatsResult, _impl_.num_users_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_.num_users_)}},
    // uint32 num_clients = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PresenceStatsResult, _impl_.num_clients_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_.num_clients_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 num_clients = 1;
    {PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_.num_clients_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 num_users = 2;
    {PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_.num_users_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PresenceStatsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.PresenceStatsResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.num_clients_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.num_users_) -
      reinterpret_cast<char*>(&_impl_.num_clients_)) + sizeof(_impl_.num_users_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PresenceStatsResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PresenceStatsResult& this_ = static_cast<const PresenceStatsResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PresenceStatsResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PresenceStatsResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.PresenceStatsResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 num_clients = 1;
          if (this_._internal_num_clients() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_num_clients(), target);
          }

          // uint32 num_users = 2;
          if (this_._internal_num_users() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_num_users(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.PresenceStatsResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PresenceStatsResult::ByteSizeLong(const MessageLite& base) {
          const PresenceStatsResult& this_ = static_cast<const PresenceStatsResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PresenceStatsResult::ByteSizeLong() const {
          const PresenceStatsResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.PresenceStatsResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 num_clients = 1;
            if (this_._internal_num_clients() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_num_clients());
            }
            // uint32 num_users = 2;
            if (this_._internal_num_users() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_num_users());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PresenceStatsResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PresenceStatsResult*>(&to_msg);
  auto& from = static_cast<const PresenceStatsResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.PresenceStatsResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_clients() != 0) {
    _this->_impl_.num_clients_ = from._impl_.num_clients_;
  }
  if (from._internal_num_users() != 0) {
    _this->_impl_.num_users_ = from._impl_.num_users_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PresenceStatsResult::CopyFrom(const PresenceStatsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.PresenceStatsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PresenceStatsResult::InternalSwap(PresenceStatsResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_.num_users_)
      + sizeof(PresenceStatsResult::_impl_.num_users_)
      - PROTOBUF_FIELD_OFFSET(PresenceStatsResult, _impl_.num_clients_)>(
          reinterpret_cast<char*>(&_impl_.num_clients_),
          reinterpret_cast<char*>(&other->_impl_.num_clients_));
}

::google::protobuf::Metadata PresenceStatsResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamPosition::_Internal {
 public:
};

StreamPosition::StreamPosition(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.StreamPosition)
}
inline PROTOBUF_NDEBUG_INLINE StreamPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::StreamPosition& from_msg)
      : epoch_(arena, from.epoch_),
        _cached_size_{0} {}

StreamPosition::StreamPosition(
    ::google::protobuf::Arena* arena,
    const StreamPosition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.offset_ = from._impl_.offset_;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.StreamPosition)
}
inline PROTOBUF_NDEBUG_INLINE StreamPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : epoch_(arena),
        _cached_size_{0} {}

inline void StreamPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
StreamPosition::~StreamPosition() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.StreamPosition)
  SharedDtor(*this);
}
inline void StreamPosition::SharedDtor(MessageLite& self) {
  StreamPosition& this_ = static_cast<StreamPosition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.epoch_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StreamPosition::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StreamPosition(arena);
}
constexpr auto StreamPosition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamPosition),
                                            alignof(StreamPosition));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StreamPosition::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StreamPosition_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StreamPosition::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StreamPosition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StreamPosition::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StreamPosition>(), &StreamPosition::ByteSizeLong,
            &StreamPosition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StreamPosition, _impl_._cached_size_),
        false,
    },
    &StreamPosition::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StreamPosition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> StreamPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::StreamPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string epoch = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPosition, _impl_.epoch_)}},
    // uint64 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StreamPosition, _impl_.offset_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StreamPosition, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 offset = 1;
    {PROTOBUF_FIELD_OFFSET(StreamPosition, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string epoch = 2;
    {PROTOBUF_FIELD_OFFSET(StreamPosition, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\0\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.StreamPosition"
    "epoch"
  }},
};

PROTOBUF_NOINLINE void StreamPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.StreamPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.epoch_.ClearToEmpty();
  _impl_.offset_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamPosition::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamPosition& this_ = static_cast<const StreamPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamPosition::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.StreamPosition)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 offset = 1;
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_offset(), target);
          }

          // string epoch = 2;
          if (!this_._internal_epoch().empty()) {
            const std::string& _s = this_._internal_epoch();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.StreamPosition.epoch");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.StreamPosition)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamPosition::ByteSizeLong(const MessageLite& base) {
          const StreamPosition& this_ = static_cast<const StreamPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamPosition::ByteSizeLong() const {
          const StreamPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.StreamPosition)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string epoch = 2;
            if (!this_._internal_epoch().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_epoch());
            }
            // uint64 offset = 1;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamPosition*>(&to_msg);
  auto& from = static_cast<const StreamPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.StreamPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_epoch().empty()) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamPosition::CopyFrom(const StreamPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.StreamPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamPosition::InternalSwap(StreamPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.epoch_, &other->_impl_.epoch_, arena);
        swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata StreamPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HistoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._has_bits_);
};

HistoryRequest::HistoryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.HistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE HistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::HistoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_(arena, from.channel_) {}

HistoryRequest::HistoryRequest(
    ::google::protobuf::Arena* arena,
    const HistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.since_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::StreamPosition>(
                              arena, *from._impl_.since_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, reverse_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::reverse_));

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.HistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE HistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channel_(arena) {}

inline void HistoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_),
           0,
           offsetof(Impl_, reverse_) -
               offsetof(Impl_, since_) +
               sizeof(Impl_::reverse_));
}
HistoryRequest::~HistoryRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.HistoryRequest)
  SharedDtor(*this);
}
inline void HistoryRequest::SharedDtor(MessageLite& self) {
  HistoryRequest& this_ = static_cast<HistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.channel_.Destroy();
  delete this_._impl_.since_;
  this_._impl_.~Impl_();
}

inline void* HistoryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HistoryRequest(arena);
}
constexpr auto HistoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HistoryRequest),
                                            alignof(HistoryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HistoryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HistoryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HistoryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HistoryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HistoryRequest>(), &HistoryRequest::ByteSizeLong,
            &HistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._cached_size_),
        false,
    },
    &HistoryRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 62, 2> HistoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966846,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::HistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .centrifugal.centrifuge.protocol.StreamPosition since = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.since_)}},
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.channel_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 limit = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryRequest, _impl_.limit_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 limit = 7;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .centrifugal.centrifuge.protocol.StreamPosition since = 8;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.since_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool reverse = 9;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.reverse_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::StreamPosition>()},
  }}, {{
    "\56\7\0\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.HistoryRequest"
    "channel"
  }},
};

PROTOBUF_NOINLINE void HistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.HistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.since_ != nullptr);
    _impl_.since_->Clear();
  }
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reverse_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.reverse_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HistoryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HistoryRequest& this_ = static_cast<const HistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HistoryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.HistoryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string channel = 1;
          if (!this_._internal_channel().empty()) {
            const std::string& _s = this_._internal_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.HistoryRequest.channel");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 limit = 7;
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_limit(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .centrifugal.centrifuge.protocol.StreamPosition since = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.since_, this_._impl_.since_->GetCachedSize(), target,
                stream);
          }

          // bool reverse = 9;
          if (this_._internal_reverse() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_reverse(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.HistoryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HistoryRequest::ByteSizeLong(const MessageLite& base) {
          const HistoryRequest& this_ = static_cast<const HistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HistoryRequest::ByteSizeLong() const {
          const HistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.HistoryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string channel = 1;
            if (!this_._internal_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel());
            }
          }
           {
            // .centrifugal.centrifuge.protocol.StreamPosition since = 8;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.since_);
            }
          }
           {
            // int32 limit = 7;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
            // bool reverse = 9;
            if (this_._internal_reverse() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryRequest*>(&to_msg);
  auto& from = static_cast<const HistoryRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.HistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.since_ != nullptr);
    if (_this->_impl_.since_ == nullptr) {
      _this->_impl_.since_ =
          ::google::protobuf::Message::CopyConstruct<::centrifugal::centrifuge::protocol::StreamPosition>(arena, *from._impl_.since_);
    } else {
      _this->_impl_.since_->MergeFrom(*from._impl_.since_);
    }
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_reverse() != 0) {
    _this->_impl_.reverse_ = from._impl_.reverse_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryRequest::CopyFrom(const HistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.HistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryRequest::InternalSwap(HistoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.reverse_)
      + sizeof(HistoryRequest::_impl_.reverse_)
      - PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.since_)>(
          reinterpret_cast<char*>(&_impl_.since_),
          reinterpret_cast<char*>(&other->_impl_.since_));
}

::google::protobuf::Metadata HistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryResult::_Internal {
 public:
};

HistoryResult::HistoryResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.HistoryResult)
}
inline PROTOBUF_NDEBUG_INLINE HistoryResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::HistoryResult& from_msg)
      : publications_{visibility, arena, from.publications_},
        epoch_(arena, from.epoch_),
        _cached_size_{0} {}

HistoryResult::HistoryResult(
    ::google::protobuf::Arena* arena,
    const HistoryResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoryResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.offset_ = from._impl_.offset_;

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.HistoryResult)
}
inline PROTOBUF_NDEBUG_INLINE HistoryResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : publications_{visibility, arena},
        epoch_(arena),
        _cached_size_{0} {}

inline void HistoryResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
HistoryResult::~HistoryResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.HistoryResult)
  SharedDtor(*this);
}
inline void HistoryResult::SharedDtor(MessageLite& self) {
  HistoryResult& this_ = static_cast<HistoryResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.epoch_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HistoryResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HistoryResult(arena);
}
constexpr auto HistoryResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.publications_) +
          decltype(HistoryResult::_impl_.publications_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HistoryResult), alignof(HistoryResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HistoryResult::PlacementNew_,
                                 sizeof(HistoryResult),
                                 alignof(HistoryResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HistoryResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HistoryResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HistoryResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HistoryResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HistoryResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HistoryResult>(), &HistoryResult::ByteSizeLong,
            &HistoryResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_._cached_size_),
        false,
    },
    &HistoryResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HistoryResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 59, 2> HistoryResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::HistoryResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .centrifugal.centrifuge.protocol.Publication publications = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.publications_)}},
    // string epoch = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.epoch_)}},
    // uint64 offset = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistoryResult, _impl_.offset_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .centrifugal.centrifuge.protocol.Publication publications = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.publications_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string epoch = 2;
    {PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 offset = 3;
    {PROTOBUF_FIELD_OFFSET(HistoryResult, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::Publication>()},
  }}, {{
    "\55\0\5\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.HistoryResult"
    "epoch"
  }},
};

PROTOBUF_NOINLINE void HistoryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.HistoryResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publications_.Clear();
  _impl_.epoch_.ClearToEmpty();
  _impl_.offset_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HistoryResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HistoryResult& this_ = static_cast<const HistoryResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HistoryResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HistoryResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.HistoryResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .centrifugal.centrifuge.protocol.Publication publications = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_publications_size());
               i < n; i++) {
            const auto& repfield = this_._internal_publications().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string epoch = 2;
          if (!this_._internal_epoch().empty()) {
            const std::string& _s = this_._internal_epoch();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.HistoryResult.epoch");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 offset = 3;
          if (this_._internal_offset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_offset(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.HistoryResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HistoryResult::ByteSizeLong(const MessageLite& base) {
          const HistoryResult& this_ = static_cast<const HistoryResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HistoryResult::ByteSizeLong() const {
          const HistoryResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.HistoryResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .centrifugal.centrifuge.protocol.Publication publications = 1;
            {
              total_size += 1UL * this_._internal_publications_size();
              for (const auto& msg : this_._internal_publications()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string epoch = 2;
            if (!this_._internal_epoch().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_epoch());
            }
            // uint64 offset = 3;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_offset());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HistoryResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryResult*>(&to_msg);
  auto& from = static_cast<const HistoryResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.HistoryResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_publications()->MergeFrom(
      from._internal_publications());
  if (!from._internal_epoch().empty()) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryResult::CopyFrom(const HistoryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.HistoryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryResult::InternalSwap(HistoryResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.publications_.InternalSwap(&other->_impl_.publications_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.epoch_, &other->_impl_.epoch_, arena);
        swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata HistoryResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PingRequest::_Internal {
 public:
};

PingRequest::PingRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PingRequest)
}
PingRequest::PingRequest(
    ::google::protobuf::Arena* arena,
    const PingRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PingRequest)
}

inline void* PingRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PingRequest(arena);
}
constexpr auto PingRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PingRequest),
                                            alignof(PingRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PingRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PingRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PingRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PingRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PingRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PingRequest>(), &PingRequest::ByteSizeLong,
            &PingRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PingRequest, _impl_._cached_size_),
        false,
    },
    &PingRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PingRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PingRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PingResult::_Internal {
 public:
};

PingResult::PingResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.PingResult)
}
PingResult::PingResult(
    ::google::protobuf::Arena* arena,
    const PingResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PingResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.PingResult)
}

inline void* PingResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PingResult(arena);
}
constexpr auto PingResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PingResult),
                                            alignof(PingResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PingResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PingResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PingResult::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PingResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PingResult::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PingResult>(), &PingResult::ByteSizeLong,
            &PingResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PingResult, _impl_._cached_size_),
        false,
    },
    &PingResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PingResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PingResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::PingResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PingResult::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RPCRequest::_Internal {
 public:
};

RPCRequest::RPCRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.RPCRequest)
}
inline PROTOBUF_NDEBUG_INLINE RPCRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::RPCRequest& from_msg)
      : data_(arena, from.data_),
        method_(arena, from.method_),
        _cached_size_{0} {}

RPCRequest::RPCRequest(
    ::google::protobuf::Arena* arena,
    const RPCRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RPCRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.RPCRequest)
}
inline PROTOBUF_NDEBUG_INLINE RPCRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        method_(arena),
        _cached_size_{0} {}

inline void RPCRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RPCRequest::~RPCRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.RPCRequest)
  SharedDtor(*this);
}
inline void RPCRequest::SharedDtor(MessageLite& self) {
  RPCRequest& this_ = static_cast<RPCRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.method_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RPCRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RPCRequest(arena);
}
constexpr auto RPCRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RPCRequest),
                                            alignof(RPCRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RPCRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RPCRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RPCRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RPCRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RPCRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RPCRequest>(), &RPCRequest::ByteSizeLong,
            &RPCRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RPCRequest, _impl_._cached_size_),
        false,
    },
    &RPCRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RPCRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> RPCRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RPCRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string method = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RPCRequest, _impl_.method_)}},
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RPCRequest, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(RPCRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string method = 2;
    {PROTOBUF_FIELD_OFFSET(RPCRequest, _impl_.method_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\6\0\0\0\0\0"
    "centrifugal.centrifuge.protocol.RPCRequest"
    "method"
  }},
};

PROTOBUF_NOINLINE void RPCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.RPCRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.method_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RPCRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RPCRequest& this_ = static_cast<const RPCRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RPCRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RPCRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.RPCRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // string method = 2;
          if (!this_._internal_method().empty()) {
            const std::string& _s = this_._internal_method();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centrifugal.centrifuge.protocol.RPCRequest.method");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.RPCRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RPCRequest::ByteSizeLong(const MessageLite& base) {
          const RPCRequest& this_ = static_cast<const RPCRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RPCRequest::ByteSizeLong() const {
          const RPCRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.RPCRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string method = 2;
            if (!this_._internal_method().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_method());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RPCRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RPCRequest*>(&to_msg);
  auto& from = static_cast<const RPCRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.RPCRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_method().empty()) {
    _this->_internal_set_method(from._internal_method());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RPCRequest::CopyFrom(const RPCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.RPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RPCRequest::InternalSwap(RPCRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_, &other->_impl_.method_, arena);
}

::google::protobuf::Metadata RPCRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RPCResult::_Internal {
 public:
};

RPCResult::RPCResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.RPCResult)
}
inline PROTOBUF_NDEBUG_INLINE RPCResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::RPCResult& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

RPCResult::RPCResult(
    ::google::protobuf::Arena* arena,
    const RPCResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RPCResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.RPCResult)
}
inline PROTOBUF_NDEBUG_INLINE RPCResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void RPCResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RPCResult::~RPCResult() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.RPCResult)
  SharedDtor(*this);
}
inline void RPCResult::SharedDtor(MessageLite& self) {
  RPCResult& this_ = static_cast<RPCResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RPCResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RPCResult(arena);
}
constexpr auto RPCResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RPCResult),
                                            alignof(RPCResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RPCResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RPCResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RPCResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RPCResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RPCResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RPCResult>(), &RPCResult::ByteSizeLong,
            &RPCResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RPCResult, _impl_._cached_size_),
        false,
    },
    &RPCResult::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RPCResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RPCResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::RPCResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RPCResult, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(RPCResult, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RPCResult::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.RPCResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RPCResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RPCResult& this_ = static_cast<const RPCResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RPCResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RPCResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.RPCResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.RPCResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RPCResult::ByteSizeLong(const MessageLite& base) {
          const RPCResult& this_ = static_cast<const RPCResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RPCResult::ByteSizeLong() const {
          const RPCResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.RPCResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RPCResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RPCResult*>(&to_msg);
  auto& from = static_cast<const RPCResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.RPCResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RPCResult::CopyFrom(const RPCResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.RPCResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RPCResult::InternalSwap(RPCResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata RPCResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendRequest::_Internal {
 public:
};

SendRequest::SendRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centrifugal.centrifuge.protocol.SendRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::centrifugal::centrifuge::protocol::SendRequest& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

SendRequest::SendRequest(
    ::google::protobuf::Arena* arena,
    const SendRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:centrifugal.centrifuge.protocol.SendRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void SendRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendRequest::~SendRequest() {
  // @@protoc_insertion_point(destructor:centrifugal.centrifuge.protocol.SendRequest)
  SharedDtor(*this);
}
inline void SendRequest::SharedDtor(MessageLite& self) {
  SendRequest& this_ = static_cast<SendRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SendRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendRequest(arena);
}
constexpr auto SendRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SendRequest),
                                            alignof(SendRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendRequest>(), &SendRequest::ByteSizeLong,
            &SendRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendRequest, _impl_._cached_size_),
        false,
    },
    &SendRequest::kDescriptorMethods,
    &descriptor_table_protocol_2fclient_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SendRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centrifugal::centrifuge::protocol::SendRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendRequest, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(SendRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:centrifugal.centrifuge.protocol.SendRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendRequest& this_ = static_cast<const SendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:centrifugal.centrifuge.protocol.SendRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:centrifugal.centrifuge.protocol.SendRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendRequest::ByteSizeLong(const MessageLite& base) {
          const SendRequest& this_ = static_cast<const SendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendRequest::ByteSizeLong() const {
          const SendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:centrifugal.centrifuge.protocol.SendRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendRequest*>(&to_msg);
  auto& from = static_cast<const SendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centrifugal.centrifuge.protocol.SendRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendRequest::CopyFrom(const SendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centrifugal.centrifuge.protocol.SendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendRequest::InternalSwap(SendRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata SendRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace centrifuge
}  // namespace centrifugal
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protocol_2fclient_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
